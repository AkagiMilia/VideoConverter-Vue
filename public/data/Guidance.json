{
    "a64multi": {},
    "a64multi5": {},
    "alias_pix": {},
    "amv": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-huffman": {
            "valueType": "int",
            "explanation": "Huffman table strategy (from 0 to 1) (default optimal)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": null
                },
                "optimal": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "apng": {
        "-dpi": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per inch) (from 0 to 65536) (default 0)"
        },
        "-dpm": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per meter) (from 0 to 65536) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "sub": {
                    "value": "1",
                    "explanation": null
                },
                "up": {
                    "value": "2",
                    "explanation": null
                },
                "avg": {
                    "value": "3",
                    "explanation": null
                },
                "paeth": {
                    "value": "4",
                    "explanation": null
                },
                "mixed": {
                    "value": "5",
                    "explanation": null
                }
            }
        }
    },
    "asv1": {},
    "asv2": {},
    "libaom-av1": {
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from 0 to 8) (default 1)"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 2) (default -1)"
        },
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead at for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-max-frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to 6) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "adaptive quantization mode (from -1 to 4) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "Aq not used"
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance based Aq"
                },
                "complexity": {
                    "value": "2",
                    "explanation": "Complexity based Aq"
                },
                "cyclic": {
                    "value": "3",
                    "explanation": "Cyclic Refresh Aq"
                }
            }
        },
        "-error-resilience": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                }
            }
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-denoise-noise-level": {
            "valueType": "int",
            "explanation": "Amount of noise to be removed (from -1 to INT_MAX) (default -1)"
        },
        "-denoise-block-size": {
            "valueType": "int",
            "explanation": "Denoise block size (from -1 to INT_MAX) (default -1)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-minsection-pct": {
            "valueType": "int",
            "explanation": "GOP min bitrate (% of target) (from -1 to 100) (default -1)"
        },
        "-maxsection-pct": {
            "valueType": "int",
            "explanation": "GOP max bitrate (% of target) (from -1 to 5000) (default -1)"
        },
        "-frame-parallel": {
            "valueType": "boolean",
            "explanation": "Enable frame parallel decodability features (default auto)"
        },
        "-tiles": {
            "valueType": "image_size",
            "explanation": "Tile columns x rows"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "Log2 of number of tile columns to use (from -1 to 6) (default -1)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "Log2 of number of tile rows to use (from -1 to 6) (default -1)"
        },
        "-row-mt": {
            "valueType": "boolean",
            "explanation": "Enable row based multi-threading (default auto)"
        },
        "-enable-cdef": {
            "valueType": "boolean",
            "explanation": "Enable CDEF filtering (default auto)"
        },
        "-enable-global-motion": {
            "valueType": "boolean",
            "explanation": "Enable global motion (default auto)"
        },
        "-enable-intrabc": {
            "valueType": "boolean",
            "explanation": "Enable intra block copy prediction mode (default auto)"
        },
        "-enable-restoration": {
            "valueType": "boolean",
            "explanation": "Enable Loop Restoration filtering (default auto)"
        },
        "-usage": {
            "valueType": "int",
            "explanation": "Quality and compression efficiency vs speed trade-off (from 0 to INT_MAX) (default good)",
            "subValues": {
                "good": {
                    "value": "0",
                    "explanation": "Good quality"
                },
                "realtime": {
                    "value": "1",
                    "explanation": "Realtime encoding"
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "The metric that the encoder tunes for. Automatically chosen by the encoder by default (from -1 to 1) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-enable-rect-partitions": {
            "valueType": "boolean",
            "explanation": "Enable rectangular partitions (default auto)"
        },
        "-enable-1to4-partitions": {
            "valueType": "boolean",
            "explanation": "Enable 1:4/4:1 partitions (default auto)"
        },
        "-enable-ab-partitions": {
            "valueType": "boolean",
            "explanation": "Enable ab shape partitions (default auto)"
        },
        "-enable-angle-delta": {
            "valueType": "boolean",
            "explanation": "Enable angle delta intra prediction (default auto)"
        },
        "-enable-cfl-intra": {
            "valueType": "boolean",
            "explanation": "Enable chroma predicted from luma intra prediction (default auto)"
        },
        "-enable-filter-intra": {
            "valueType": "boolean",
            "explanation": "Enable filter intra predictor (default auto)"
        },
        "-enable-intra-edge-filter": {
            "valueType": "boolean",
            "explanation": "Enable intra edge filter (default auto)"
        },
        "-enable-smooth-intra": {
            "valueType": "boolean",
            "explanation": "Enable smooth intra prediction mode (default auto)"
        },
        "-enable-paeth-intra": {
            "valueType": "boolean",
            "explanation": "Enable paeth predictor in intra prediction (default auto)"
        },
        "-enable-palette": {
            "valueType": "boolean",
            "explanation": "Enable palette prediction mode (default auto)"
        },
        "-enable-flip-idtx": {
            "valueType": "boolean",
            "explanation": "Enable extended transform type (default auto)"
        },
        "-enable-tx64": {
            "valueType": "boolean",
            "explanation": "Enable 64-pt transform (default auto)"
        },
        "-reduced-tx-type-set": {
            "valueType": "boolean",
            "explanation": "Use reduced set of transform types (default auto)"
        },
        "-use-intra-dct-only": {
            "valueType": "boolean",
            "explanation": "Use DCT only for INTRA modes (default auto)"
        },
        "-use-inter-dct-only": {
            "valueType": "boolean",
            "explanation": "Use DCT only for INTER modes (default auto)"
        },
        "-use-intra-default-tx-only": {
            "valueType": "boolean",
            "explanation": "Use default-transform only for INTRA modes (default auto)"
        },
        "-enable-ref-frame-mvs": {
            "valueType": "boolean",
            "explanation": "Enable temporal mv prediction (default auto)"
        },
        "-enable-reduced-reference-set": {
            "valueType": "boolean",
            "explanation": "Use reduced set of single and compound references (default auto)"
        },
        "-enable-obmc": {
            "valueType": "boolean",
            "explanation": "Enable obmc (default auto)"
        },
        "-enable-dual-filter": {
            "valueType": "boolean",
            "explanation": "Enable dual filter (default auto)"
        },
        "-enable-diff-wtd-comp": {
            "valueType": "boolean",
            "explanation": "Enable difference-weighted compound (default auto)"
        },
        "-enable-dist-wtd-comp": {
            "valueType": "boolean",
            "explanation": "Enable distance-weighted compound (default auto)"
        },
        "-enable-onesided-comp": {
            "valueType": "boolean",
            "explanation": "Enable one sided compound (default auto)"
        },
        "-enable-interinter-wedge": {
            "valueType": "boolean",
            "explanation": "Enable interinter wedge compound (default auto)"
        },
        "-enable-interintra-wedge": {
            "valueType": "boolean",
            "explanation": "Enable interintra wedge compound (default auto)"
        },
        "-enable-masked-comp": {
            "valueType": "boolean",
            "explanation": "Enable masked compound (default auto)"
        },
        "-enable-interintra-comp": {
            "valueType": "boolean",
            "explanation": "Enable interintra compound (default auto)"
        },
        "-enable-smooth-interintra": {
            "valueType": "boolean",
            "explanation": "Enable smooth interintra mode (default auto)"
        },
        "-aom-params": {
            "valueType": "dictionary",
            "explanation": "Set libaom options using a :-separated list of key=value pairs"
        }
    },
    "librav1e": {
        "-qp": {
            "valueType": "int",
            "explanation": "use constant quantizer mode (from -1 to 255) (default -1)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "what speed preset to use (from -1 to 10) (default -1)"
        },
        "-tiles": {
            "valueType": "int",
            "explanation": "number of tiles encode with (from -1 to I64_MAX) (default 0)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "number of tiles rows to encode with (from -1 to I64_MAX) (default 0)"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "number of tiles columns to encode with (from -1 to I64_MAX) (default 0)"
        },
        "-rav1e-params": {
            "valueType": "dictionary",
            "explanation": "set the rav1e configuration using a :-separated list of key=value parameters"
        }
    },
    "avrp": {},
    "avui": {},
    "ayuv": {},
    "bmp": {},
    "cfhd": {
        "-quality": {
            "valueType": "int",
            "explanation": "set quality (from 0 to 12) (default film3+)",
            "subValues": {
                "film3+": {
                    "value": "0",
                    "explanation": null
                },
                "film3": {
                    "value": "1",
                    "explanation": null
                },
                "film2+": {
                    "value": "2",
                    "explanation": null
                },
                "film2": {
                    "value": "3",
                    "explanation": null
                },
                "film1.5": {
                    "value": "4",
                    "explanation": null
                },
                "film1+": {
                    "value": "5",
                    "explanation": null
                },
                "film1": {
                    "value": "6",
                    "explanation": null
                },
                "high+": {
                    "value": "7",
                    "explanation": null
                },
                "high": {
                    "value": "8",
                    "explanation": null
                },
                "medium+": {
                    "value": "9",
                    "explanation": null
                },
                "medium": {
                    "value": "10",
                    "explanation": null
                },
                "low+": {
                    "value": "11",
                    "explanation": null
                },
                "low": {
                    "value": "12",
                    "explanation": null
                }
            }
        }
    },
    "cinepak": {
        "-max_extra_cb_iterations": {
            "valueType": "int",
            "explanation": "Max extra codebook recalculation passes, more is better and slower (from 0 to INT_MAX) (default 2)"
        },
        "-skip_empty_cb": {
            "valueType": "boolean",
            "explanation": "Avoid wasting bytes, ignore vintage MacOS decoder (default false)"
        },
        "-max_strips": {
            "valueType": "int",
            "explanation": "Limit strips/frame, vintage compatible is 1..3, otherwise the more the better (from 1 to 32) (default 3)"
        },
        "-min_strips": {
            "valueType": "int",
            "explanation": "Enforce min strips/frame, more is worse and faster, must be <= max_strips (from 1 to 32) (default 1)"
        },
        "-strip_number_adaptivity": {
            "valueType": "int",
            "explanation": "How fast the strip number adapts, more is slightly better, much slower (from 0 to 31) (default 0)"
        }
    },
    "cljr": {
        "-dither_type": {
            "valueType": "int",
            "explanation": "Dither type (from 0 to 2) (default 1)"
        }
    },
    "vc2": {
        "-tolerance": {
            "valueType": "double",
            "explanation": "Max undershoot in percent (from 0 to 45) (default 5)"
        },
        "-slice_width": {
            "valueType": "int",
            "explanation": "Slice width (from 32 to 1024) (default 32)"
        },
        "-slice_height": {
            "valueType": "int",
            "explanation": "Slice height (from 8 to 1024) (default 16)"
        },
        "-wavelet_depth": {
            "valueType": "int",
            "explanation": "Transform depth (from 1 to 5) (default 4)"
        },
        "-wavelet_type": {
            "valueType": "int",
            "explanation": "Transform type (from 0 to 7) (default 9_7)",
            "subValues": {
                "9_7": {
                    "value": "0",
                    "explanation": "Deslauriers-Dubuc (9,7)"
                },
                "5_3": {
                    "value": "1",
                    "explanation": "LeGall (5,3)"
                },
                "haar": {
                    "value": "4",
                    "explanation": "Haar (with shift)"
                },
                "haar_noshift": {
                    "value": "3",
                    "explanation": "Haar (without shift)"
                }
            }
        },
        "-qm": {
            "valueType": "int",
            "explanation": "Custom quantization matrix (from 0 to 3) (default default)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": "Default from the specifications"
                },
                "color": {
                    "value": "1",
                    "explanation": "Prevents low bitrate discoloration"
                },
                "flat": {
                    "value": "2",
                    "explanation": "Optimize for PSNR"
                }
            }
        }
    },
    "dnxhd": {
        "-nitris_compat": {
            "valueType": "boolean",
            "explanation": "encode with Avid Nitris compatibility (default false)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 0)"
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from 0 to 5) (default dnxhd)",
            "subValues": {
                "dnxhd": {
                    "value": "0",
                    "explanation": null
                },
                "dnxhr_444": {
                    "value": "5",
                    "explanation": null
                },
                "dnxhr_hqx": {
                    "value": "4",
                    "explanation": null
                },
                "dnxhr_hq": {
                    "value": "3",
                    "explanation": null
                },
                "dnxhr_sq": {
                    "value": "2",
                    "explanation": null
                },
                "dnxhr_lb": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "dpx": {},
    "dvvideo": {
        "-quant_deadzone": {
            "valueType": "int",
            "explanation": "Quantizer dead zone (from 0 to 1024) (default 7)"
        }
    },
    "exr": {
        "-compression": {
            "valueType": "int",
            "explanation": "set compression type (from 0 to 3) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "none"
                },
                "rle": {
                    "value": "1",
                    "explanation": "RLE"
                },
                "zip1": {
                    "value": "2",
                    "explanation": "ZIP1"
                },
                "zip16": {
                    "value": "3",
                    "explanation": "ZIP16"
                }
            }
        },
        "-format": {
            "valueType": "int",
            "explanation": "set pixel type (from 1 to 2) (default float)",
            "subValues": {
                "half": {
                    "value": "1",
                    "explanation": null
                },
                "float": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-gamma": {
            "valueType": "float",
            "explanation": "set gamma (from 0.001 to FLT_MAX) (default 1)"
        }
    },
    "ffv1": {
        "-slicecrc": {
            "valueType": "boolean",
            "explanation": "Protect slices with CRCs (default auto)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -2 to 2) (default rice)",
            "subValues": {
                "rice": {
                    "value": "0",
                    "explanation": "Golomb rice"
                },
                "range_def": {
                    "value": "-2",
                    "explanation": "Range with default table"
                },
                "range_tab": {
                    "value": "2",
                    "explanation": "Range with custom table"
                },
                "ac": {
                    "value": "1",
                    "explanation": "Range with custom table (the ac option exists for compatibility and is deprecated)"
                }
            }
        },
        "-context": {
            "valueType": "int",
            "explanation": "Context model (from 0 to 1) (default 0)"
        }
    },
    "ffvhuff": {
        "-non_deterministic": {
            "valueType": "boolean",
            "explanation": "Allow multithreading for e.g. context=1 at the expense of determinism (default true)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-context": {
            "valueType": "int",
            "explanation": "Set per-frame huffman tables (from 0 to 1) (default 0)"
        }
    },
    "fits": {},
    "flashsv": {},
    "flashsv2": {},
    "flv": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "gif": {
        "-gifflags": {
            "valueType": "flags",
            "explanation": "set GIF flags (default offsetting+transdiff)",
            "subValues": {
                "offsetting": {
                    "value": "offsetting",
                    "explanation": "enable picture offsetting"
                },
                "transdiff": {
                    "value": "transdiff",
                    "explanation": "enable transparency detection between frames"
                }
            }
        },
        "-gifimage": {
            "valueType": "boolean",
            "explanation": "enable encoding only images per frame (default false)"
        },
        "-global_palette": {
            "valueType": "boolean",
            "explanation": "write a palette to the global gif header where feasible (default true)"
        }
    },
    "h261": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "h263": {
        "-obmc": {
            "valueType": "boolean",
            "explanation": "use overlapped block motion compensation. (default false)"
        },
        "-mb_info": {
            "valueType": "int",
            "explanation": "emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size (from 0 to INT_MAX) (default 0)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "h263p": {
        "-umv": {
            "valueType": "boolean",
            "explanation": "Use unlimited motion vectors. (default false)"
        },
        "-aiv": {
            "valueType": "boolean",
            "explanation": "Use alternative inter VLC. (default false)"
        },
        "-obmc": {
            "valueType": "boolean",
            "explanation": "use overlapped block motion compensation. (default false)"
        },
        "-structured_slices": {
            "valueType": "boolean",
            "explanation": "Write slice start position at every GOB header instead of just GOB number. (default false)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "libx264": {
        "-preset": {
            "valueType": "string",
            "explanation": "Set the encoding preset (cf. x264 --fullhelp) (default \"medium\")"
        },
        "-tune": {
            "valueType": "string",
            "explanation": "Tune the encoding params (cf. x264 --fullhelp)"
        },
        "-profile": {
            "valueType": "string",
            "explanation": "Set profile restrictions (cf. x264 --fullhelp)"
        },
        "-fastfirstpass": {
            "valueType": "boolean",
            "explanation": "Use fast settings when encoding first pass (default true)"
        },
        "-level": {
            "valueType": "string",
            "explanation": "Specify level (as defined by Annex A)"
        },
        "-passlogfile": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-wpredp": {
            "valueType": "string",
            "explanation": "Weighted prediction for P-frames"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-x264opts": {
            "valueType": "string",
            "explanation": "x264 options"
        },
        "-crf": {
            "valueType": "float",
            "explanation": "Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)"
        },
        "-crf_max": {
            "valueType": "float",
            "explanation": "In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)"
        },
        "-qp": {
            "valueType": "int",
            "explanation": "Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "AQ method (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance AQ (complexity mask)"
                },
                "autovariance": {
                    "value": "2",
                    "explanation": "Auto-variance AQ"
                },
                "autovariance-biased": {
                    "value": "3",
                    "explanation": "Auto-variance AQ with bias to dark scenes"
                }
            }
        },
        "-aq-strength": {
            "valueType": "float",
            "explanation": "AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)"
        },
        "-psy": {
            "valueType": "boolean",
            "explanation": "Use psychovisual optimizations. (default auto)"
        },
        "-psy-rd": {
            "valueType": "string",
            "explanation": "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format."
        },
        "-rc-lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)"
        },
        "-weightb": {
            "valueType": "boolean",
            "explanation": "Weighted prediction for B-frames. (default auto)"
        },
        "-weightp": {
            "valueType": "int",
            "explanation": "Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "simple": {
                    "value": "1",
                    "explanation": null
                },
                "smart": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim": {
            "valueType": "boolean",
            "explanation": "Calculate and print SSIM stats. (default auto)"
        },
        "-intra-refresh": {
            "valueType": "boolean",
            "explanation": "Use Periodic Intra Refresh instead of IDR frames. (default auto)"
        },
        "-bluray-compat": {
            "valueType": "boolean",
            "explanation": "Bluray compatibility workarounds. (default auto)"
        },
        "-b-bias": {
            "valueType": "int",
            "explanation": "Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)"
        },
        "-b-pyramid": {
            "valueType": "int",
            "explanation": "Keep some B-frames as references. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "strict": {
                    "value": "1",
                    "explanation": "Strictly hierarchical pyramid"
                },
                "normal": {
                    "value": "2",
                    "explanation": "Non-strict (not Blu-ray compatible)"
                }
            }
        },
        "-mixed-refs": {
            "valueType": "boolean",
            "explanation": "One reference per partition, as opposed to one reference per macroblock (default auto)"
        },
        "-8x8dct": {
            "valueType": "boolean",
            "explanation": "High profile 8x8 transform. (default auto)"
        },
        "-fast-pskip": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-aud": {
            "valueType": "boolean",
            "explanation": "Use access unit delimiters. (default auto)"
        },
        "-mbtree": {
            "valueType": "boolean",
            "explanation": "Use macroblock tree ratecontrol. (default auto)"
        },
        "-deblock": {
            "valueType": "string",
            "explanation": "Loop filter parameters, in <alpha:beta> form."
        },
        "-cplxblur": {
            "valueType": "float",
            "explanation": "Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)"
        },
        "-partitions": {
            "valueType": "string",
            "explanation": "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all"
        },
        "-direct-pred": {
            "valueType": "int",
            "explanation": "Direct MV prediction mode (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "spatial": {
                    "value": "1",
                    "explanation": null
                },
                "temporal": {
                    "value": "2",
                    "explanation": null
                },
                "auto": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-slice-max-size": {
            "valueType": "int",
            "explanation": "Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)"
        },
        "-stats": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-nal-hrd": {
            "valueType": "int",
            "explanation": "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "vbr": {
                    "value": "1",
                    "explanation": null
                },
                "cbr": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-avcintra-class": {
            "valueType": "int",
            "explanation": "AVC-Intra class 50/100/200 (from -1 to 200) (default -1)"
        },
        "-me_method": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-motion-est": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "If forcing keyframes, force them as IDR frames. (default false)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -1 to 1) (default default)",
            "subValues": {
                "default": {
                    "value": "-1",
                    "explanation": null
                },
                "cavlc": {
                    "value": "0",
                    "explanation": null
                },
                "cabac": {
                    "value": "1",
                    "explanation": null
                },
                "vlc": {
                    "value": "0",
                    "explanation": null
                },
                "ac": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)"
        },
        "-chromaoffset": {
            "valueType": "int",
            "explanation": "QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default -1)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default -1)"
        },
        "-x264-params": {
            "valueType": "dictionary",
            "explanation": "Override the x264 configuration using a :-separated list of key=value parameters"
        }
    },
    "libx264rgb": {
        "-preset": {
            "valueType": "string",
            "explanation": "Set the encoding preset (cf. x264 --fullhelp) (default \"medium\")"
        },
        "-tune": {
            "valueType": "string",
            "explanation": "Tune the encoding params (cf. x264 --fullhelp)"
        },
        "-profile": {
            "valueType": "string",
            "explanation": "Set profile restrictions (cf. x264 --fullhelp)"
        },
        "-fastfirstpass": {
            "valueType": "boolean",
            "explanation": "Use fast settings when encoding first pass (default true)"
        },
        "-level": {
            "valueType": "string",
            "explanation": "Specify level (as defined by Annex A)"
        },
        "-passlogfile": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-wpredp": {
            "valueType": "string",
            "explanation": "Weighted prediction for P-frames"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-x264opts": {
            "valueType": "string",
            "explanation": "x264 options"
        },
        "-crf": {
            "valueType": "float",
            "explanation": "Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)"
        },
        "-crf_max": {
            "valueType": "float",
            "explanation": "In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)"
        },
        "-qp": {
            "valueType": "int",
            "explanation": "Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "AQ method (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance AQ (complexity mask)"
                },
                "autovariance": {
                    "value": "2",
                    "explanation": "Auto-variance AQ"
                },
                "autovariance-biased": {
                    "value": "3",
                    "explanation": "Auto-variance AQ with bias to dark scenes"
                }
            }
        },
        "-aq-strength": {
            "valueType": "float",
            "explanation": "AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)"
        },
        "-psy": {
            "valueType": "boolean",
            "explanation": "Use psychovisual optimizations. (default auto)"
        },
        "-psy-rd": {
            "valueType": "string",
            "explanation": "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format."
        },
        "-rc-lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)"
        },
        "-weightb": {
            "valueType": "boolean",
            "explanation": "Weighted prediction for B-frames. (default auto)"
        },
        "-weightp": {
            "valueType": "int",
            "explanation": "Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "simple": {
                    "value": "1",
                    "explanation": null
                },
                "smart": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim": {
            "valueType": "boolean",
            "explanation": "Calculate and print SSIM stats. (default auto)"
        },
        "-intra-refresh": {
            "valueType": "boolean",
            "explanation": "Use Periodic Intra Refresh instead of IDR frames. (default auto)"
        },
        "-bluray-compat": {
            "valueType": "boolean",
            "explanation": "Bluray compatibility workarounds. (default auto)"
        },
        "-b-bias": {
            "valueType": "int",
            "explanation": "Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)"
        },
        "-b-pyramid": {
            "valueType": "int",
            "explanation": "Keep some B-frames as references. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "strict": {
                    "value": "1",
                    "explanation": "Strictly hierarchical pyramid"
                },
                "normal": {
                    "value": "2",
                    "explanation": "Non-strict (not Blu-ray compatible)"
                }
            }
        },
        "-mixed-refs": {
            "valueType": "boolean",
            "explanation": "One reference per partition, as opposed to one reference per macroblock (default auto)"
        },
        "-8x8dct": {
            "valueType": "boolean",
            "explanation": "High profile 8x8 transform. (default auto)"
        },
        "-fast-pskip": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-aud": {
            "valueType": "boolean",
            "explanation": "Use access unit delimiters. (default auto)"
        },
        "-mbtree": {
            "valueType": "boolean",
            "explanation": "Use macroblock tree ratecontrol. (default auto)"
        },
        "-deblock": {
            "valueType": "string",
            "explanation": "Loop filter parameters, in <alpha:beta> form."
        },
        "-cplxblur": {
            "valueType": "float",
            "explanation": "Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)"
        },
        "-partitions": {
            "valueType": "string",
            "explanation": "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all"
        },
        "-direct-pred": {
            "valueType": "int",
            "explanation": "Direct MV prediction mode (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "spatial": {
                    "value": "1",
                    "explanation": null
                },
                "temporal": {
                    "value": "2",
                    "explanation": null
                },
                "auto": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-slice-max-size": {
            "valueType": "int",
            "explanation": "Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)"
        },
        "-stats": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-nal-hrd": {
            "valueType": "int",
            "explanation": "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "vbr": {
                    "value": "1",
                    "explanation": null
                },
                "cbr": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-avcintra-class": {
            "valueType": "int",
            "explanation": "AVC-Intra class 50/100/200 (from -1 to 200) (default -1)"
        },
        "-me_method": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-motion-est": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "If forcing keyframes, force them as IDR frames. (default false)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -1 to 1) (default default)",
            "subValues": {
                "default": {
                    "value": "-1",
                    "explanation": null
                },
                "cavlc": {
                    "value": "0",
                    "explanation": null
                },
                "cabac": {
                    "value": "1",
                    "explanation": null
                },
                "vlc": {
                    "value": "0",
                    "explanation": null
                },
                "ac": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)"
        },
        "-chromaoffset": {
            "valueType": "int",
            "explanation": "QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default -1)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default -1)"
        },
        "-x264-params": {
            "valueType": "dictionary",
            "explanation": "Override the x264 configuration using a :-separated list of key=value parameters"
        }
    },
    "h264_videotoolbox": {
        "-profile": {
            "valueType": "int",
            "explanation": "Profile (from 0 to 5) (default 0)",
            "subValues": {
                "baseline": {
                    "value": "1",
                    "explanation": "Baseline Profile"
                },
                "main": {
                    "value": "2",
                    "explanation": "Main Profile"
                },
                "high": {
                    "value": "3",
                    "explanation": "High Profile"
                },
                "extended": {
                    "value": "4",
                    "explanation": "Extend Profile"
                }
            }
        },
        "-level": {
            "valueType": "int",
            "explanation": "Level (from 0 to 52) (default 0)",
            "subValues": {
                "1.3": {
                    "value": "13",
                    "explanation": "Level 1.3, only available with Baseline Profile"
                },
                "3.0": {
                    "value": "30",
                    "explanation": "Level 3.0"
                },
                "3.1": {
                    "value": "31",
                    "explanation": "Level 3.1"
                },
                "3.2": {
                    "value": "32",
                    "explanation": "Level 3.2"
                },
                "4.0": {
                    "value": "40",
                    "explanation": "Level 4.0"
                },
                "4.1": {
                    "value": "41",
                    "explanation": "Level 4.1"
                },
                "4.2": {
                    "value": "42",
                    "explanation": "Level 4.2"
                },
                "5.0": {
                    "value": "50",
                    "explanation": "Level 5.0"
                },
                "5.1": {
                    "value": "51",
                    "explanation": "Level 5.1"
                },
                "5.2": {
                    "value": "52",
                    "explanation": "Level 5.2"
                }
            }
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Entropy coding (from 0 to 2) (default 0)",
            "subValues": {
                "cavlc": {
                    "value": "1",
                    "explanation": "CAVLC entropy coding"
                },
                "vlc": {
                    "value": "1",
                    "explanation": "CAVLC entropy coding"
                },
                "cabac": {
                    "value": "2",
                    "explanation": "CABAC entropy coding"
                },
                "ac": {
                    "value": "2",
                    "explanation": "CABAC entropy coding"
                }
            }
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-allow_sw": {
            "valueType": "boolean",
            "explanation": "Allow software encoding (default false)"
        },
        "-require_sw": {
            "valueType": "boolean",
            "explanation": "Require software encoding (default false)"
        },
        "-realtime": {
            "valueType": "boolean",
            "explanation": "Hint that encoding should happen in real-time if not faster (e.g. capturing from camera). (default false)"
        },
        "-frames_before": {
            "valueType": "boolean",
            "explanation": "Other frames will come before the frames in this session. This helps smooth concatenation issues. (default false)"
        },
        "-frames_after": {
            "valueType": "boolean",
            "explanation": "Other frames will come after the frames in this session. This helps smooth concatenation issues. (default false)"
        }
    },
    "hap": {
        "-format": {
            "valueType": "int",
            "explanation": "(from 11 to 15) (default hap)",
            "subValues": {
                "hap": {
                    "value": "11",
                    "explanation": "Hap 1 (DXT1 textures)"
                },
                "hap_alpha": {
                    "value": "14",
                    "explanation": "Hap Alpha (DXT5 textures)"
                },
                "hap_q": {
                    "value": "15",
                    "explanation": "Hap Q (DXT5-YCoCg textures)"
                }
            }
        },
        "-chunks": {
            "valueType": "int",
            "explanation": "chunk count (from 1 to 64) (default 1)"
        },
        "-compressor": {
            "valueType": "int",
            "explanation": "second-stage compressor (from 160 to 176) (default snappy)",
            "subValues": {
                "none": {
                    "value": "160",
                    "explanation": "None"
                },
                "snappy": {
                    "value": "176",
                    "explanation": "Snappy"
                }
            }
        }
    },
    "libx265": {
        "-crf": {
            "valueType": "float",
            "explanation": "Quality-controlled variable bitrate. CRF is the default rate control method; it does not try to reach any particular bitrate target, instead it tries to achieve a given uniform quality and the size of the bitstream is determined by the complexity of the source video. The higher the rate factor the higher the quantization and the lower the quality. Default rate factor is 28.0. (from -1 to FLT_MAX) "
        },
        "-qp": {
            "valueType": "int",
            "explanation": "Specify base quantization parameter for Constant QP rate control. Using this option enables Constant QP rate control. The specified QP is assigned to P slices. I and B slices are given QPs relative to P slices using param->rc.ipFactor and param->rc.pbFactor unless QP 0 is specified, in which case QP 0 is used for all slice types. Note that QP 0 does not cause lossless encoding, it only disables quantization. \nDefault disabled.\nRange of values: an integer from 0 to 51"
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "if forcing keyframes, force them as IDR frames (default false)"
        },
        "-preset": {
            "valueType": "string",
            "explanation": "Sets parameters to preselected values, trading off compression efficiency against encoding speed. These parameters are applied before all other input parameters are applied, and so you can override any parameters that these values control.",
            "subValues": {
                "ultrafast": {
                    "value": "0",
                    "explanation": null
                },
                "superfast": {
                    "value": "1",
                    "explanation": null
                },
                "veryfast": {
                    "value": "2",
                    "explanation": null
                },
                "faster": {
                    "value": "3",
                    "explanation": null
                },
                "fast": {
                    "value": "4",
                    "explanation": null
                },
                "medium": {
                    "value": "5",
                    "explanation": null
                },
                "slow": {
                    "value": "6",
                    "explanation": null
                },
                "slower": {
                    "value": "7",
                    "explanation": null
                },
                "veryslow": {
                    "value": "8",
                    "explanation": null
                },
                "placebo": {
                    "value": "9",
                    "explanation": null
                }
            }
        },
        "-tune": {
            "valueType": "string",
            "explanation": "Tune the settings for a particular type of source or situation. The changes will be applied after --preset but before all other parameters. \nDefault none. "
        },
        "-profile": {
            "valueType": "string",
            "explanation": "Enforce the requirements of the specified profile, ensuring the output stream will be decodable by a decoder which supports that profile. May abort the encode if the specified profile is impossible to be supported by the compile options chosen for the encoder (a high bit depth encoder will be unable to output bitstreams compliant with Main or MainStillPicture).",
            "subValues": {
                "main": {
                    "value": "0",
                    "explanation": null
                },
                "main-intra": {
                    "value": "1",
                    "explanation": null
                },
                "mainstillpicture": {
                    "value": "2",
                    "explanation": null
                },
                "main444-8": {
                    "value": "3",
                    "explanation": null
                },
                "main444-intra": {
                    "value": "4",
                    "explanation": null
                },
                "main444-stillpicture": {
                    "value": "5",
                    "explanation": null
                },
                "main10": {
                    "value": "6",
                    "explanation": null
                },
                "main10-intra": {
                    "value": "7",
                    "explanation": null
                },
                "main422-10": {
                    "value": "8",
                    "explanation": null
                },
                "main422-10-intra": {
                    "value": "9",
                    "explanation": null
                },
                "main444-10": {
                    "value": "10",
                    "explanation": null
                },
                "main444-10-intra": {
                    "value": "11",
                    "explanation": null
                },
                "main12": {
                    "value": "12",
                    "explanation": null
                },
                "main12-intra": {
                    "value": "13",
                    "explanation": null
                },
                "main422-12": {
                    "value": "14",
                    "explanation": null
                },
                "main422-12-intra": {
                    "value": "15",
                    "explanation": null
                },
                "main444-12": {
                    "value": "16",
                    "explanation": null
                },
                "main444-12-intra": {
                    "value": "17",
                    "explanation": null
                }
            }
        },
        "-x265-params": {
            "valueType": "dictionary",
            "explanation": "set the x265 configuration using a :-separated list of key=value parameters",
            "subValues": {
                "ssim":{
                    "valueType":"boolean",
                    "explanation":"Calculate and report Structural Similarity values. It is recommended to use --tune ssim if you are measuring ssim, else the results should not be used for comparison purposes. \nDefault disabled"
                },
                "psnr":{
                    "valueType":"boolean",
                    "explanation":"Calculate and report Peak Signal to Noise Ratio. It is recommended to use --tune psnr if you are measuring PSNR, else the results should not be used for comparison purposes. \nDefault disabled"
                },
                "asm":{
                    "valueType":"string",
                    "explanation":"x265 will use all detected CPU SIMD architectures by default. You can disable all assembly by using --no-asm or you can specify a comma separated list of SIMD architectures to use, matching these strings: MMX2, SSE, SSE2, SSE3, SSSE3, SSE4, SSE4.1, SSE4.2, AVX, XOP, FMA4, AVX2, FMA3\n Some higher architectures imply lower ones being present, this is handled implicitly.\nOne may also directly supply the CPU capability bitmap as an integer.\nNote that by specifying this option you are overriding x265’s CPU detection and it is possible to do this wrong. You can cause encoder crashes by specifying SIMD architectures which are not supported on your CPU.\nDefault: auto-detected SIMD architectures"
                },
                "frame-threads":{
                    "valueType":"int",
                    "explanation":"Number of concurrently encoded frames. Using a single frame thread gives a slight improvement in compression, since the entire reference frames are always available for motion compensation, but it has severe performance implications. Default is an autodetected count based on the number of CPU cores and whether WPP is enabled or not.\nOver-allocation of frame threads will not improve performance, it will generally just increase memory use.\nValues: any value between 0 and 16. Default is 0, auto-detect"
                },
                "wpp":{
                    "valueType":"boolean",
                    "explanation":"Enable Wavefront Parallel Processing. The encoder may begin encoding a row as soon as the row above it is at least two CTUs ahead in the encode process. This gives a 3-5x gain in parallelism for about 1% overhead in compression efficiency.\nThis feature is implicitly disabled when no thread pool is present.\nDefault: Enabled"
                },
                "pmode":{
                    "valueType":"boolean",
                    "explanation":"Parallel mode decision, or distributed mode analysis. When enabled the encoder will distribute the analysis work of each CU (merge, inter, intra) across multiple worker threads. Only recommended if x265 is not already saturating the CPU cores. In RD levels 3 and 4 it will be most effective if –rect is enabled. At RD levels 5 and 6 there is generally always enough work to distribute to warrant the overhead, assuming your CPUs are not already saturated.\n–pmode will increase utilization without reducing compression efficiency. In fact, since the modes are all measured in parallel it makes certain early-outs impractical and thus you usually get slightly better compression when it is enabled (at the expense of not skipping improbable modes). This bypassing of early-outs can cause pmode to slow down encodes, especially at faster presets.\nThis feature is implicitly disabled when no thread pool is present.\nDefault disabled"
                },
                "pme":{
                    "valueType":"boolean",
                    "explanation":"Parallel motion estimation. When enabled the encoder will distribute motion estimation across multiple worker threads when more than two references require motion searches for a given CU. Only recommended if x265 is not already saturating CPU cores. --pmode is much more effective than this option, since the amount of work it distributes is substantially higher. With –pme it is not unusual for the overhead of distributing the work to outweigh the parallelism benefits.\nThis feature is implicitly disabled when no thread pool is present.\n –pme will increase utilization on many core systems with no effect on the output bitstream.\nDefault disabled"
                },
                "slices":{
                    "valueType":"int",
                    "explanation":"Encode each incoming frame as multiple parallel slices that may be decoded independently. Support available only for rectangular slices that cover the entire width of the image.\n Recommended for improving encoder performance only if frame-parallelism and WPP are unable to maximize utilization on given hardware.\nDefault: 1 slice per frame. Experimental feature"
                },
                "copy-pic":{
                    "valueType":"boolean",
                    "explanation":"Allow encoder to copy input x265 pictures to internal frame buffers. When disabled, x265 will not make an internal copy of the input picture and will work with the application’s buffers. While this allows for deeper integration, it is the responsibility of the application to (a) ensure that the allocated picture has extra space for padding that will be done by the library, and (b) the buffers aren’t recycled until the library has completed encoding this frame (which can be figured out by tracking NALs output by x265)\nDefault: enabled"
                },
                "level-idc":{
                    "valueType":"float",
                    "explanation":"Minimum decoder requirement level. Defaults to 0, which implies auto-detection by the encoder. If specified, the encoder will attempt to bring the encode specifications within that specified level. If the encoder is unable to reach the level it issues a warning and aborts the encode. The requested level will be signaled in the bitstream even if it is higher than the actual level.\nBeware, specifying a decoder level will force the encoder to enable VBV for constant rate factor encodes, which may introduce non-determinism.\nThe value is specified as a float or as an integer with the level times 10, for example level 5.1 is specified as “5.1” or “51”, and level 5.0 is specified as “5.0” or “50”.\nAnnex A levels: 1, 2, 2.1, 3, 3.1, 4, 4.1, 5, 5.1, 5.2, 6, 6.1, 6.2, 8.5"
                },
                "high-tier":{
                    "valueType":"boolean",
                    "explanation":"If --level-idc has been specified, –high-tier allows the support of high tier at that level. The encoder will first attempt to encode at the specified level, main tier first, turning on high tier only if necessary and available at that level. If your requested level does not support a High tier, high tier will not be supported. If –no-high-tier has been specified, then the encoder will attempt to encode only at the main tier.\n Default: enabled"
                },
                "ref":{
                    "valueType":"int",
                    "explanation":"Max number of L0 references to be allowed. This number has a linear multiplier effect on the amount of work performed in motion search but will generally have a beneficial effect on compression and distortion.\n Note that x265 allows up to 16 L0 references but the HEVC specification only allows a maximum of 8 total reference frames. So if you have B frames enabled only 7 L0 refs are valid and if you have --b-pyramid enabled (which is enabled by default in all presets), then only 6 L0 refs are the maximum allowed by the HEVC specification. If x265 detects that the total reference count is greater than 8, it will issue a warning that the resulting stream is non-compliant and it signals the stream as profile NONE and level NONE and will abort the encode unless --allow-non-conformance it specified. Compliant HEVC decoders may refuse to decode such streams.\nDefault 3"
                },
                "allow-non-conformance":{
                    "valueType":"boolean",
                    "explanation":"Allow libx265 to generate a bitstream with profile and level NONE. By default, it will abort any encode which does not meet strict level compliance. The two most likely causes for non-conformance are --ctu being too small, --ref being too high, or the bitrate or resolution being out of specification.\nDefault: disabled"
                },
                "uhd-bd":{
                    "valueType":"boolean",
                    "explanation":"Enable Ultra HD Blu-ray format support. If specified with incompatible encoding options, the encoder will attempt to modify/set the right encode specifications. If the encoder is unable to do so, this option will be turned OFF. Highly experimental.\nDefault: disabled"
                },
                "rd":{
                    "valueType":"int",
                    "explanation":"Level of RDO in mode decision. The higher the value, the more exhaustive the analysis and the more rate distortion optimization is used. The lower the value the faster the encode, the higher the value the smaller the bitstream (in general). Default 3\nNote that this table aims for accuracy but is not necessarily our final target behavior for each mode.\nRange of values: 1: least .. 6: full RDO analysis\nOptions which affect the coding unit quad-tree, sometimes referred to as the prediction quad-tree."
                },
                "ctu":{
                    "valueType":"int",
                    "explanation":"Maximum CU size (width and height). The larger the maximum CU size, the more efficiently x265 can encode flat areas of the picture, giving large reductions in bitrate. However, this comes at a loss of parallelism with fewer rows of CUs that can be encoded in parallel, and less frame parallelism as well. Because of this the faster presets use a CU size of 32. \nDefault: 64. Value can be chosen from 16, 32, 64."
                },
                "min-cu-size":{
                    "valueType":"int",
                    "explanation":"Minimum CU size (width and height). By using 16 or 32 the encoder will not analyze the cost of CUs below that minimum threshold, saving considerable amounts of compute with a predictable increase in bitrate. This setting has a large effect on performance on the faster presets.\nDefault: 8 (minimum 8x8 CU for HEVC, best compression efficiency). Value can be chosen from 8, 16, 32."
                },
                "limit-refs":{
                    "valueType":"int",
                    "explanation":"When set to X265_REF_LIMIT_DEPTH (1) x265 will limit the references analyzed at the current depth based on the references used to code the 4 sub-blocks at the next depth. For example, a 16x16 CU will only use the references used to code its four 8x8 CUs.\nWhen set to X265_REF_LIMIT_CU (2), the rectangular and asymmetrical partitions will only use references selected by the 2Nx2N motion search (including at the lowest depth which is otherwise unaffected by the depth limit).\nWhen set to 3 (X265_REF_LIMIT_DEPTH && X265_REF_LIMIT_CU), the 2Nx2N motion search at each depth will only use references from the split CUs and the rect/amp motion searches at that depth will only use the reference(s) selected by 2Nx2N.\nFor all non-zero values of limit-refs, the current depth will evaluate intra mode (in inter slices), only if intra mode was chosen as the best mode for at least one of the 4 sub-blocks.\nYou can often increase the number of references you are using (within your decoder level limits) if you enable one or both of these flags. \nValue can be chosen from 0, 1, 2 and 3."
                },
                "limit-modes":{
                    "valueType":"int",
                    "explanation":"When enabled, limit-modes will limit modes analyzed for each CU using cost metrics from the 4 sub-CUs. When multiple inter modes like --rect and/or --amp are enabled, this feature will use motion cost heuristics from the 4 sub-CUs to bypass modes that are unlikely to be the best choice. This can significantly improve performance when rect and/or --amp are enabled at minimal compression efficiency loss."
                },
                "rect":{
                    "valueType":"boolean",
                    "explanation":"Enable analysis of rectangular motion partitions Nx2N and 2NxN (50/50 splits, two directions). Default disabled"
                },
                "amp":{
                    "valueType":"boolean",
                    "explanation":"Enable analysis of asymmetric motion partitions (75/25 splits, four directions). At RD levels 0 through 4, AMP partitions are only considered at CU sizes 32x32 and below. At RD levels 5 and 6, it will only consider AMP partitions as merge candidates (no motion search) at 64x64, and as merge or inter candidates below 64x64.\nThe AMP partitions which are searched are derived from the current best inter partition. If Nx2N (vertical rectangular) is the best current prediction, then left and right asymmetrical splits will be evaluated. If 2NxN (horizontal rectangular) is the best current prediction, then top and bottom asymmetrical splits will be evaluated, If 2Nx2N is the best prediction, and the block is not a merge/skip, then all four AMP partitions are evaluated.\nThis setting has no effect if rectangular partitions are disabled. Default disabled"
                },
                "early-skip":{
                    "valueType":"boolean",
                    "explanation":"Measure 2Nx2N merge candidates first; if no residual is found, additional modes at that depth are not analysed. Default disabled"
                },
                "rskip":{
                    "valueType":"int",
                    "explanation":"This option determines early exit from CU depth recursion in modes 1 and 2. When a skip CU is found, additional heuristics (depending on the RD level and rskip mode) are used to decide whether to terminate recursion. The following table summarizes the behavior.",
                    "subValues":{
                        "0":{"value": "0",
                            "explanation": null
                        },
                        "1":{"value": "1",
                            "explanation": null
                        },
                        "2":{"value": "2",
                            "explanation": null
                        }
                    }
                },
                "rskip-edge-threshold":{
                    "valueType":"int",
                    "explanation":"Range of the value: 0-100.\nDenotes the minimum expected edge-density percentage within the CU, below which the recursion is skipped. Internally normalized to decimal value in x265 library. Recommended low thresholds for slow encodes and high for fast encodes. Default: 5, requires --rskip mode 2 to be enabled."
                },
                "splitrd-skip":{
                    "valueType":"boolean",
                    "explanation":"Enable skipping split RD analysis when sum of split CU rdCost larger than one split CU rdCost for Intra CU. Default disabled."
                },
                "fast-intra":{
                    "valueType":"boolean",
                    "explanation":"Perform an initial scan of every fifth intra angular mode, then check modes +/- 2 distance from the best mode, then +/- 1 distance from the best mode, effectively performing a gradient descent. When enabled 10 modes in total are checked. When disabled all 33 angular modes are checked. Only applicable for --rd levels 4 and below (medium preset and faster)."
                },
                "b-intra":{
                    "valueType":"boolean",
                    "explanation":"Enables the evaluation of intra modes in B slices. \nDefault disabled."
                },
                "cu-lossless":{
                    "valueType":"boolean",
                    "explanation":"For each CU, evaluate lossless (transform and quant bypass) encode of the best non-lossless mode option as a potential rate distortion optimization. If the global option --lossless has been specified, all CUs will be encoded as lossless unconditionally regardless of whether this option was enabled. Default disabled.\nOnly effective at RD levels 3 and above, which perform RDO mode decisions."
                },
                "tskip-fast":{
                    "valueType":"boolean",
                    "explanation":"Only evaluate transform skip for NxN intra predictions (4x4 blocks). Only applicable if transform skip is enabled. For chroma, only evaluate if luma used tskip. Inter block tskip analysis is unmodified. \nDefault disabled"
                },
                "rd-refine":{
                    "valueType":"boolean",
                    "explanation":"For each analysed CU, calculate R-D cost on the best partition mode for a range of QP values, to find the optimal rounding effect. \nDefault disabled. Only effective at RD levels 5 and 6"
                },
                "analysis-save":{
                    "valueType":"string",
                    "explanation":"Encoder outputs analysis information of each frame. Analysis data from save mode is written to the file specified. Requires cutree, pmode to be off. \nDefault disabled.The amount of analysis data stored is determined by --analysis-save-reuse-level."
                },
                "analysis-load":{
                    "valueType":"string",
                    "explanation":"Encoder reuses analysis information from the file specified. By reading the analysis data written by an earlier encode of the same sequence, substantial redundant work may be avoided. Requires cutree, pmode to be off. \nDefault disabled.\nThe amount of analysis data reused is determined by --analysis-load-reuse-level."
                },
                "analysis-reuse-file":{
                    "valueType":"string",
                    "explanation":"Specify a filename for --multi-pass-opt-analysis and option:–multi-pass-opt-distortion. If no filename is specified, x265_analysis.dat is used."
                },
                "analysis-save-reuse-level":{
                    "valueType":"int",
                    "explanation":"The range of the value is from 0 to 10. ‘analysis-save-reuse-level’ denotes the amount of information stored during --analysis-save and ‘analysis-load-reuse-level’ denotes the amount of information reused during --analysis-load. Higher the value, higher the information stored/reused, faster the encode. Default 0. If not set during analysis-save/load, the encoder will internally configure them to 5.\nNote that --analysis-save-reuse-level and --analysis-load-reuse-level must be paired with --analysis-save and --analysis-load respectively."
                },
                "analysis-load-reuse-level":{
                    "valueType":"int",
                    "explanation":"The range of the value is from 0 to 10. ‘analysis-save-reuse-level’ denotes the amount of information stored during --analysis-save and ‘analysis-load-reuse-level’ denotes the amount of information reused during --analysis-load. Higher the value, higher the information stored/reused, faster the encode. Default 0. If not set during analysis-save/load, the encoder will internally configure them to 5.\nNote that --analysis-save-reuse-level and --analysis-load-reuse-level must be paired with --analysis-save and --analysis-load respectively."
                },
                "refine-mv-type":{
                    "valueType":"string",
                    "explanation":"Reuse MV information received through API call. Currently receives information for AVC size and the accepted string input is “avc”. Default is disabled."
                },
                "refine-ctu-distortion":{
                    "valueType":"int",
                    "explanation":"Store/normalize ctu distortion in analysis-save/load. 0 - Disabled. 1 - Save ctu distortion to the analysis file specified during --analysis-save.\nLoad CTU distortion from the analysis file and normalize it across every frame during --analysis-load.\nDefault 0."
                },
                "scale-factor":{
                    "valueType":"int",
                    "explanation":"Factor by which input video is scaled down for analysis save mode. This option should be coupled with --analysis-load/--analysis-save at reuse levels 1 to 6 and 10. The ctu size of load can either be the same as that of save or double the size of save. \nDefault 0."
                },
                "refine-intra":{
                    "valueType":"int",
                    "explanation":"Enables refinement of intra blocks in current encode. Default 0.\nLevel 0 - Forces both mode and depth from the save encode.\nLevel 1 - Evaluates all intra modes at current depth(n) and at depth (n+1) when current block size is one greater than the min-cu-size. Forces modes for larger blocks.\nLevel 2 - In addition to the functionality of level 1, at all depths, force (a) only depth when angular mode is chosen by the save encode. (b) depth and mode when other intra modes are chosen by the save encode.\nLevel 3 - Perform analysis of intra modes for depth reused from first encode.\nLevel 4 - Does not reuse any analysis information - redo analysis for the intra block.",
                    "subValues":{
                        "0":{
                            "value":"0",
                            "explanation":"Level 0 - Forces both mode and depth from the save encode."
                        },
                        "1":{
                            "value":"1",
                            "explanation":"Level 1 - Evaluates all inter modes at current depth(n) and at depth (n+1) when current block "
                        },
                        "2":{
                            "value":"2",
                            "explanation":"Level 2 - In addition to the functionality of level 1, restricts the modes evaluated when specific modes are decided as the best mode by the save encode."
                        },
                        "3":{
                            "value":"3",
                            "explanation":"Level 3 - Perform analysis of inter modes while reusing depths from the save encode."
                        }
                    }
                },
                "refine-mv":{
                    "valueType":"int",
                    "explanation":"Enables refinement of motion vector for scaled video. Evaluates the best motion vector based on the level selected. Default 1.\nLevel 1 - Search around scaled MV.\nLevel 2 - Level 1 + Search around best AMVP cand.\nLevel 3 - Level 2 + Search around the other AMVP cand.",
                    "subValues":{
                        "1":{
                            "value":"1",
                            "explanation":"Level 1 - Search around scaled MV."
                        },
                        "2":{
                            "value":"2",
                            "explanation":"Level 2 - Level 1 + Search around best AMVP cand."
                        },
                        "3":{
                            "value":"3",
                            "explanation":"Level 3 - Level 2 + Search around the other AMVP cand."
                        }
                    }
                },
                "dynamic-refine":{
                    "valueType":"boolean",
                    "explanation":"Dynamically switches --refine-inter levels 0-3 based on the content and the encoder settings. It is recommended to use --refine-intra 4 with dynamic refinement.\nDefault disabled."
                },
                "rdoq-level":{
                    "valueType":"int",
                    "explanation":"Specify the amount of rate-distortion analysis to use within quantization:\nAt level 0 rate-distortion cost is not considered in quant\nAt level 1 rate-distortion cost is used to find optimal rounding values for each level (and allows psy-rdoq to be effective). It trades-off the signaling cost of the coefficient vs its post-inverse quant distortion from the pre-quant coefficient. When --psy-rdoq is enabled, this formula is biased in favor of more energy in the residual (larger coefficient absolute levels)\nAt level 2 rate-distortion cost is used to make decimate decisions on each 4x4 coding group, including the cost of signaling the group within the group bitmap. If the total distortion of not signaling the entire coding group is less than the rate cost, the block is decimated. Next, it applies rate-distortion cost analysis to the last non-zero coefficient, which can result in many (or all) of the coding groups being decimated. Psy-rdoq is less effective at preserving energy when RDOQ is at level 2, since it only has influence over the level distortion costs.",
                    "subValues":{
                        "0":{
                            "value":"0",
                            "explanation":"At level 0 rate-distortion cost is not considered in quant."
                        },
                        "1":{
                            "value":"1",
                            "explanation":"At level 1 rate-distortion cost is used to find optimal rounding values for each level (and allows psy-rdoq to be effective). It trades-off the signaling cost of the coefficient vs its post-inverse quant distortion from the pre-quant coefficient. When --psy-rdoq is enabled, this formula is biased in favor of more energy in the residual (larger coefficient absolute levels)."
                        },
                        "2":{
                            "value":"2",
                            "explanation":"At level 2 rate-distortion cost is used to make decimate decisions on each 4x4 coding group, including the cost of signaling the group within the group bitmap. If the total distortion of not signaling the entire coding group is less than the rate cost, the block is decimated. Next, it applies rate-distortion cost analysis to the last non-zero coefficient, which can result in many (or all) of the coding groups being decimated. Psy-rdoq is less effective at preserving energy when RDOQ is at level 2, since it only has influence over the level distortion costs."
                        }
                    }
                },
                "no-rdoq-level":{
                    "valueType":"boolean",
                    "explanation":"No rdoq-level."
                },
                "tu-intra-depth":{
                    "valueType":"int",
                    "explanation":"The range of the value is from 1 to 4.\nThe transform unit (residual) quad-tree begins with the same depth as the coding unit quad-tree, but the encoder may decide to further split the transform unit tree if it improves compression efficiency. This setting limits the number of extra recursion depth which can be attempted for intra coded units. Default: 1, which means the residual quad-tree is always at the same depth as the coded unit quad-tree\nNote that when the CU intra prediction is NxN (only possible with 8x8 CUs), a TU split is implied, and thus the residual quad-tree begins at 4x4 and cannot split any further."
                },
                "tu-inter-depth":{
                    "valueType":"int",
                    "explanation":"The range of the value is from 1 to 4.\nThe transform unit (residual) quad-tree begins with the same depth as the coding unit quad-tree, but the encoder may decide to further split the transform unit tree if it improves compression efficiency. This setting limits the number of extra recursion depth which can be attempted for inter coded units. Default: 1. which means the residual quad-tree is always at the same depth as the coded unit quad-tree unless the CU was coded with rectangular or AMP partitions, in which case a TU split is implied and thus the residual quad-tree begins one layer below the CU quad-tree."
                },
                "limit-tu":{
                    "valueType":"int",
                    "explanation":"Default: 0\nEnables early exit from TU depth recursion, for inter coded blocks.\nLevel 1 - decides to recurse to next higher depth based on cost comparison of full-size TU and split TU.\nLevel 2 - based on first split subTU’s depth, limits recursion of other split subTUs.\nLevel 3 - based on the average depth of the co-located and the neighbor CUs’ TU depth, limits recursion of the current CU.\nLevel 4 - uses the depth of the neighboring/ co-located CUs TU depth to limit the 1st subTU depth. The 1st subTU depth is taken as the limiting depth for the other subTUs.\nEnabling levels 3 or 4 may cause a mismatch in the output bitstreams between --analysis-save and --analysis-load as all neighboring CUs TU depth may not be available in the --analysis-load run as only the best mode’s information is available to it.",
                    "subValues":{
                        "0":{
                            "value":"0",
                            "explanation":"Off"
                        },
                        "1":{
                            "value":"1",
                            "explanation":"Level 1 - decides to recurse to next higher depth based on cost comparison of full-size TU and split TU."
                        },
                        "2":{
                            "value":"2",
                            "explanation":"Level 2 - based on first split subTU’s depth, limits recursion of other split subTUs."
                        },
                        "3":{
                            "value":"3",
                            "explanation":"Level 3 - based on the average depth of the co-located and the neighbor CUs’ TU depth, limits recursion of the current CU."
                        },
                        "4":{
                            "value":"4",
                            "explanation":"Level 4 - uses the depth of the neighboring/ co-located CUs TU depth to limit the 1st subTU depth. The 1st subTU depth is taken as the limiting depth for the other subTUs."
                        }
                    }
                },
                "nr-intra":{
                    "valueType":"int",
                    "explanation":"Noise reduction - an adaptive deadzone applied after DCT (subtracting from DCT coefficients), before quantization. It does no pixel-level filtering, doesn’t cross DCT block boundaries, has no overlap, The higher the strength value parameter, the more aggressively it will reduce noise.\nEnabling noise reduction will make outputs diverge between different numbers of frame threads. Outputs will be deterministic but the outputs of -F2 will no longer match the outputs of -F3, etc."
                },
                "nr-inter":{
                    "valueType":"int",
                    "explanation":"Noise reduction - an adaptive deadzone applied after DCT (subtracting from DCT coefficients), before quantization. It does no pixel-level filtering, doesn’t cross DCT block boundaries, has no overlap, The higher the strength value parameter, the more aggressively it will reduce noise.\nEnabling noise reduction will make outputs diverge between different numbers of frame threads. Outputs will be deterministic but the outputs of -F2 will no longer match the outputs of -F3, etc."
                },
                "tskip":{
                    "valueType":"int",
                    "explanation":"Enable evaluation of transform skip (bypass DCT but still use quantization) coding for 4x4 TU coded blocks.\nOnly effective at RD levels 3 and above, which perform RDO mode decisions. \nDefault disabled"
                },
                "rdpenalty":{
                    "valueType":"int",
                    "explanation":"Default 0, disabled.\nWhen set to 1, transform units of size 32x32 are given a 4x bit cost penalty compared to smaller transform units, in intra coded CUs in P or B slices.\nWhen set to 2, transform units of size 32x32 are not even attempted, unless otherwise required by the maximum recursion depth. For this option to be effective with 32x32 intra CUs, --tu-intra-depth must be at least 2. For it to be effective with 64x64 intra CUs, --tu-intra-depth must be at least 3.\nNote that in HEVC an intra transform unit (a block of the residual quad-tree) is also a prediction unit, meaning that the intra prediction signal is generated for each TU block, the residual subtracted and then coded. The coding unit simply provides the prediction modes that will be used when predicting all of the transform units within the CU. This means that when you prevent 32x32 intra transform units, you are preventing 32x32 intra predictions.",
                    "subValues":{
                        "0":{
                            "value":"0",
                            "explanation":"Disabled."
                        },
                        "1":{
                            "value":"1",
                            "explanation":"4x cost penalty."
                        },
                        "2":{
                            "value":"2",
                            "explanation":"Force splits."
                        }
                    }
                },
                "max-tu-size":{
                    "valueType":"int",
                    "explanation":"Maximum TU size (width and height). The residual can be more efficiently compressed by the DCT transform when the max TU size is larger, but at the expense of more computation. Transform unit quad-tree begins at the same depth of the coded tree unit, but if the maximum TU size is smaller than the CU size then transform QT begins at the depth of the max-tu-size. \nDefault: 32.",
                    "subValues":{
                        "32":{
                            "value":"32",
                            "explanation":null
                        },
                        "16":{
                            "value":"16",
                            "explanation":null
                        },
                        "8":{
                            "value":"8",
                            "explanation":null
                        },
                        "4":{
                            "value":"4",
                            "explanation":null
                        }
                    }
                },
                "dynamic-rd":{
                    "valueType":"int",
                    "explanation":"Increases the RD level at points where quality drops due to VBV rate control enforcement. The number of CUs for which the RD is reconfigured is determined based on the strength. Strength 1 gives the best FPS, strength 4 gives the best SSIM. Strength 0 switches this feature off. Default: 0.\nEffective for RD levels 4 and below.",
                    "subValues":{
                        "0":{
                            "value":"0",
                            "explanation":null
                        },
                        "1":{
                            "value":"1",
                            "explanation":null
                        },
                        "2":{
                            "value":"2",
                            "explanation":null
                        },
                        "3":{
                            "value":"3",
                            "explanation":null
                        },
                        "4":{
                            "value":"4",
                            "explanation":null
                        }
                    }
                }
            }
        }
    },
    "hevc_videotoolbox": {
        "-profile": {
            "valueType": "int",
            "explanation": "Profile (from 0 to 3) (default 0)",
            "subValues": {
                "main": {
                    "value": "1",
                    "explanation": "Main Profile"
                },
                "main10": {
                    "value": "2",
                    "explanation": "Main10 Profile"
                }
            }
        },
        "-alpha_quality": {
            "valueType": "double",
            "explanation": "Compression quality for the alpha channel (from 0 to 1) (default 0)"
        },
        "-allow_sw": {
            "valueType": "boolean",
            "explanation": "Allow software encoding (default false)"
        },
        "-require_sw": {
            "valueType": "boolean",
            "explanation": "Require software encoding (default false)"
        },
        "-realtime": {
            "valueType": "boolean",
            "explanation": "Hint that encoding should happen in real-time if not faster (e.g. capturing from camera). (default false)"
        },
        "-frames_before": {
            "valueType": "boolean",
            "explanation": "Other frames will come before the frames in this session. This helps smooth concatenation issues. (default false)"
        },
        "-frames_after": {
            "valueType": "boolean",
            "explanation": "Other frames will come after the frames in this session. This helps smooth concatenation issues. (default false)"
        }
    },
    "huffyuv": {
        "-non_deterministic": {
            "valueType": "boolean",
            "explanation": "Allow multithreading for e.g. context=1 at the expense of determinism (default true)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "jpeg2000": {
        "-format": {
            "valueType": "int",
            "explanation": "Codec Format (from 0 to 1) (default jp2)",
            "subValues": {
                "j2k": {
                    "value": "0",
                    "explanation": null
                },
                "jp2": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-tile_width": {
            "valueType": "int",
            "explanation": "Tile Width (from 1 to 1.07374e+09) (default 256)"
        },
        "-tile_height": {
            "valueType": "int",
            "explanation": "Tile Height (from 1 to 1.07374e+09) (default 256)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "DWT Type (from 0 to 1) (default dwt97int)",
            "subValues": {
                "dwt97int": {
                    "value": "0",
                    "explanation": null
                },
                "dwt53": {
                    "value": "0",
                    "explanation": null
                }
            }
        },
        "-sop": {
            "valueType": "int",
            "explanation": "SOP marker (from 0 to 1) (default 0)"
        },
        "-eph": {
            "valueType": "int",
            "explanation": "EPH marker (from 0 to 1) (default 0)"
        },
        "-prog": {
            "valueType": "int",
            "explanation": "Progression Order (from 0 to 4) (default lrcp)",
            "subValues": {
                "lrcp": {
                    "value": "0",
                    "explanation": null
                },
                "rlcp": {
                    "value": "1",
                    "explanation": null
                },
                "rpcl": {
                    "value": "2",
                    "explanation": null
                },
                "pcrl": {
                    "value": "3",
                    "explanation": null
                },
                "cprl": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-layer_rates": {
            "valueType": "string",
            "explanation": "Layer Rates"
        }
    },
    "libopenjpeg": {
        "-format": {
            "valueType": "int",
            "explanation": "Codec Format (from 0 to 2) (default jp2)",
            "subValues": {
                "j2k": {
                    "value": "0",
                    "explanation": null
                },
                "jp2": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from 0 to 4) (default jpeg2000)",
            "subValues": {
                "jpeg2000": {
                    "value": "0",
                    "explanation": null
                },
                "cinema2k": {
                    "value": "3",
                    "explanation": null
                },
                "cinema4k": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-cinema_mode": {
            "valueType": "int",
            "explanation": "Digital Cinema (from 0 to 3) (default off)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": null
                },
                "2k_24": {
                    "value": "1",
                    "explanation": null
                },
                "2k_48": {
                    "value": "2",
                    "explanation": null
                },
                "4k_24": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-prog_order": {
            "valueType": "int",
            "explanation": "Progression Order (from 0 to 4) (default lrcp)",
            "subValues": {
                "lrcp": {
                    "value": "0",
                    "explanation": null
                },
                "rlcp": {
                    "value": "1",
                    "explanation": null
                },
                "rpcl": {
                    "value": "2",
                    "explanation": null
                },
                "pcrl": {
                    "value": "3",
                    "explanation": null
                },
                "cprl": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-numresolution": {
            "valueType": "int",
            "explanation": "(from 0 to 33) (default 6)"
        },
        "-irreversible": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 0)"
        },
        "-disto_alloc": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 1)"
        },
        "-fixed_quality": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 0)"
        }
    },
    "jpegls": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "ljpeg": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "magicyuv": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "gradient": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "mjpeg": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-huffman": {
            "valueType": "int",
            "explanation": "Huffman table strategy (from 0 to 1) (default optimal)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": null
                },
                "optimal": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "mpeg1video": {
        "-gop_timecode": {
            "valueType": "string",
            "explanation": "MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start."
        },
        "-drop_frame_timecode": {
            "valueType": "boolean",
            "explanation": "Timecode is in drop frame format. (default false)"
        },
        "-scan_offset": {
            "valueType": "boolean",
            "explanation": "Reserve space for SVCD scan offset user data. (default false)"
        },
        "-timecode_frame_start": {
            "valueType": "int64",
            "explanation": "GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "mpeg2video": {
        "-gop_timecode": {
            "valueType": "string",
            "explanation": "MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start."
        },
        "-drop_frame_timecode": {
            "valueType": "boolean",
            "explanation": "Timecode is in drop frame format. (default false)"
        },
        "-scan_offset": {
            "valueType": "boolean",
            "explanation": "Reserve space for SVCD scan offset user data. (default false)"
        },
        "-timecode_frame_start": {
            "valueType": "int64",
            "explanation": "GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)"
        },
        "-intra_vlc": {
            "valueType": "boolean",
            "explanation": "Use MPEG-2 intra VLC table. (default false)"
        },
        "-non_linear_quant": {
            "valueType": "boolean",
            "explanation": "Use nonlinear quantizer. (default false)"
        },
        "-alternate_scan": {
            "valueType": "boolean",
            "explanation": "Enable alternate scantable. (default false)"
        },
        "-seq_disp_ext": {
            "valueType": "int",
            "explanation": "Write sequence_display_extension blocks. (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "never": {
                    "value": "0",
                    "explanation": null
                },
                "always": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-video_format": {
            "valueType": "int",
            "explanation": "Video_format in the sequence_display_extension indicating the source of the video. (from 0 to 7) (default unspecified)",
            "subValues": {
                "component": {
                    "value": "0",
                    "explanation": null
                },
                "pal": {
                    "value": "1",
                    "explanation": null
                },
                "ntsc": {
                    "value": "2",
                    "explanation": null
                },
                "secam": {
                    "value": "3",
                    "explanation": null
                },
                "mac": {
                    "value": "4",
                    "explanation": null
                },
                "unspecified": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "mpeg4": {
        "-data_partitioning": {
            "valueType": "boolean",
            "explanation": "Use data partitioning. (default false)"
        },
        "-alternate_scan": {
            "valueType": "boolean",
            "explanation": "Enable alternate scantable. (default false)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "libxvid": {
        "-lumi_aq": {
            "valueType": "int",
            "explanation": "Luminance masking AQ (from 0 to 1) (default 0)"
        },
        "-variance_aq": {
            "valueType": "int",
            "explanation": "Variance AQ (from 0 to 1) (default 0)"
        },
        "-ssim": {
            "valueType": "int",
            "explanation": "Show SSIM information to stdout (from 0 to 2) (default off)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": null
                },
                "avg": {
                    "value": "1",
                    "explanation": null
                },
                "frame": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim_acc": {
            "valueType": "int",
            "explanation": "SSIM accuracy (from 0 to 4) (default 2)"
        },
        "-gmc": {
            "valueType": "int",
            "explanation": "use GMC (from 0 to 1) (default 0)"
        },
        "-me_quality": {
            "valueType": "int",
            "explanation": "Motion estimation quality (from 0 to 6) (default 4)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        }
    },
    "msmpeg4v2": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "msmpeg4": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "msvideo1": {},
    "pam": {},
    "pbm": {},
    "pcx": {},
    "pfm": {},
    "pgm": {},
    "pgmyuv": {},
    "png": {
        "-dpi": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per inch) (from 0 to 65536) (default 0)"
        },
        "-dpm": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per meter) (from 0 to 65536) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "sub": {
                    "value": "1",
                    "explanation": null
                },
                "up": {
                    "value": "2",
                    "explanation": null
                },
                "avg": {
                    "value": "3",
                    "explanation": null
                },
                "paeth": {
                    "value": "4",
                    "explanation": null
                },
                "mixed": {
                    "value": "5",
                    "explanation": null
                }
            }
        }
    },
    "ppm": {},
    "prores": {
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"fmpg\")"
        }
    },
    "prores_aw": {
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"fmpg\")"
        }
    },
    "prores_ks": {
        "-mbs_per_slice": {
            "valueType": "int",
            "explanation": "macroblocks per slice (from 1 to 8) (default 8)"
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from -1 to 5) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "proxy": {
                    "value": "0",
                    "explanation": null
                },
                "lt": {
                    "value": "1",
                    "explanation": null
                },
                "standard": {
                    "value": "2",
                    "explanation": null
                },
                "hq": {
                    "value": "3",
                    "explanation": null
                },
                "4444": {
                    "value": "4",
                    "explanation": null
                },
                "4444xq": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"Lavc\")"
        },
        "-bits_per_mb": {
            "valueType": "int",
            "explanation": "desired bits per macroblock (from 0 to 8192) (default 0)"
        },
        "-quant_mat": {
            "valueType": "int",
            "explanation": "quantiser matrix (from -1 to 6) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "proxy": {
                    "value": "0",
                    "explanation": null
                },
                "lt": {
                    "value": "2",
                    "explanation": null
                },
                "standard": {
                    "value": "3",
                    "explanation": null
                },
                "hq": {
                    "value": "4",
                    "explanation": null
                },
                "default": {
                    "value": "6",
                    "explanation": null
                }
            }
        },
        "-alpha_bits": {
            "valueType": "int",
            "explanation": "bits for alpha plane (from 0 to 16) (default 16)"
        }
    },
    "qtrle": {},
    "r10k": {},
    "r210": {},
    "rawvideo": {},
    "roqvideo": {
        "-quake3_compat": {
            "valueType": "boolean",
            "explanation": "Whether to respect known limitations in Quake 3 decoder (default true)"
        }
    },
    "rpza": {
        "-skip_frame_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        },
        "-start_one_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        },
        "-continue_one_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 0)"
        },
        "-sixteen_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        }
    },
    "rv10": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "rv20": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "sgi": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "snow": {
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 3) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                },
                "iter": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-memc_only": {
            "valueType": "boolean",
            "explanation": "Only do ME/MC (I frames -> ref, P frame -> ME+MC). (default false)"
        },
        "-no_bitstream": {
            "valueType": "boolean",
            "explanation": "Skip final bitstream writeout. (default false)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decission (from 0 to INT_MAX) (default 0)"
        },
        "-iterative_dia_size": {
            "valueType": "int",
            "explanation": "Dia size for the iterative ME (from 0 to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Spatial decomposition type (from 0 to 1) (default dwt97)",
            "subValues": {
                "dwt97": {
                    "value": "0",
                    "explanation": null
                },
                "dwt53": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        }
    },
    "speedhq": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "sunrast": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "svq1": {
        "-motion-est": {
            "valueType": "int",
            "explanation": "Motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "targa": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "libtheora": {},
    "tiff": {
        "-dpi": {
            "valueType": "int",
            "explanation": "set the image resolution (in dpi) (from 1 to 65536) (default 72)"
        },
        "-compression_algo": {
            "valueType": "int",
            "explanation": "(from 1 to 32946) (default packbits)",
            "subValues": {
                "packbits": {
                    "value": "32773",
                    "explanation": null
                },
                "raw": {
                    "value": "1",
                    "explanation": null
                },
                "lzw": {
                    "value": "5",
                    "explanation": null
                },
                "deflate": {
                    "value": "32946",
                    "explanation": null
                }
            }
        }
    },
    "utvideo": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 3) (default left)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "gradient": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "v210": {},
    "v308": {},
    "v408": {},
    "v410": {},
    "libvpx": {
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-maxframes": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "backward": {
                    "value": "1",
                    "explanation": null
                },
                "forward": {
                    "value": "2",
                    "explanation": null
                },
                "centered": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "Tune the encoding to a specific scenario (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-deadline": {
            "valueType": "int",
            "explanation": "Time to spend encoding, in microseconds. (from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-error-resilient": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                },
                "partitions": {
                    "value": "partitions",
                    "explanation": "The frame partitions are independently decodable by the bool decoder, meaning that partitions can be decoded even though earlier partitions have been lost. Note that intra prediction is still done over the partition boundary."
                }
            }
        },
        "-max-intra-rate": {
            "valueType": "int",
            "explanation": "Maximum I-frame bitrate (pct) 0=unlimited (from -1 to INT_MAX) (default -1)"
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise-sensitivity": {
            "valueType": "int",
            "explanation": "Noise sensitivity (from 0 to 4) (default 0)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-ts-parameters": {
            "valueType": "dictionary",
            "explanation": "Temporal scaling configuration using a :-separated list of key=value parameters"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 2) (default -1)"
        },
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from -16 to 16) (default 1)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "(from -16 to 16) (default 1)"
        },
        "-quality": {
            "valueType": "int",
            "explanation": "(from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-vp8flags": {
            "valueType": "flags",
            "explanation": "(default 0)",
            "subValues": {
                "error_resilient": {
                    "value": "error_resilient",
                    "explanation": "enable error resilience"
                },
                "altref": {
                    "value": "altref",
                    "explanation": "enable use of alternate reference frames (VP8/2-pass only)"
                }
            }
        },
        "-arnr_max_frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from 0 to 15) (default 0)"
        },
        "-arnr_strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from 0 to 6) (default 3)"
        },
        "-arnr_type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from 1 to 3) (default 3)"
        },
        "-rc_lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from 0 to 25) (default 25)"
        },
        "-sharpness": {
            "valueType": "int",
            "explanation": "Increase sharpness at the expense of lower PSNR (from -1 to 7) (default -1)"
        }
    },
    "libvpx-vp9": {
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-maxframes": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "backward": {
                    "value": "1",
                    "explanation": null
                },
                "forward": {
                    "value": "2",
                    "explanation": null
                },
                "centered": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "Tune the encoding to a specific scenario (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-deadline": {
            "valueType": "int",
            "explanation": "Time to spend encoding, in microseconds. (from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-error-resilient": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                },
                "partitions": {
                    "value": "partitions",
                    "explanation": "The frame partitions are independently decodable by the bool decoder, meaning that partitions can be decoded even though earlier partitions have been lost. Note that intra prediction is still done over the partition boundary."
                }
            }
        },
        "-max-intra-rate": {
            "valueType": "int",
            "explanation": "Maximum I-frame bitrate (pct) 0=unlimited (from -1 to INT_MAX) (default -1)"
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise-sensitivity": {
            "valueType": "int",
            "explanation": "Noise sensitivity (from 0 to 4) (default 0)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-ts-parameters": {
            "valueType": "dictionary",
            "explanation": "Temporal scaling configuration using a :-separated list of key=value parameters"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 6) (default -1)"
        },
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from -8 to 8) (default 1)"
        },
        "-lossless": {
            "valueType": "int",
            "explanation": "Lossless mode (from -1 to 1) (default -1)"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "Number of tile columns to use, log2 (from -1 to 6) (default -1)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "Number of tile rows to use, log2 (from -1 to 2) (default -1)"
        },
        "-frame-parallel": {
            "valueType": "boolean",
            "explanation": "Enable frame parallel decodability features (default auto)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "adaptive quantization mode (from -1 to 4) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "Aq not used"
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance based Aq"
                },
                "complexity": {
                    "value": "2",
                    "explanation": "Complexity based Aq"
                },
                "cyclic": {
                    "value": "3",
                    "explanation": "Cyclic Refresh Aq"
                },
                "equator360": {
                    "value": "4",
                    "explanation": "360 video Aq"
                }
            }
        },
        "-level": {
            "valueType": "float",
            "explanation": "Specify level (from -1 to 6.2) (default -1)"
        },
        "-row-mt": {
            "valueType": "boolean",
            "explanation": "Row based multi-threading (default auto)"
        },
        "-tune-content": {
            "valueType": "int",
            "explanation": "Tune content type (from -1 to 2) (default -1)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": "Regular video content"
                },
                "screen": {
                    "value": "1",
                    "explanation": "Screen capture content"
                },
                "film": {
                    "value": "2",
                    "explanation": "Film content; improves grain retention"
                }
            }
        },
        "-corpus-complexity": {
            "valueType": "int",
            "explanation": "corpus vbr complexity midpoint (from -1 to 10000) (default -1)"
        },
        "-enable-tpl": {
            "valueType": "boolean",
            "explanation": "Enable temporal dependency model (default auto)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "(from -16 to 16) (default 1)"
        },
        "-quality": {
            "valueType": "int",
            "explanation": "(from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-vp8flags": {
            "valueType": "flags",
            "explanation": "(default 0)",
            "subValues": {
                "error_resilient": {
                    "value": "error_resilient",
                    "explanation": "enable error resilience"
                },
                "altref": {
                    "value": "altref",
                    "explanation": "enable use of alternate reference frames (VP8/2-pass only)"
                }
            }
        },
        "-arnr_max_frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from 0 to 15) (default 0)"
        },
        "-arnr_strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from 0 to 6) (default 3)"
        },
        "-arnr_type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from 1 to 3) (default 3)"
        },
        "-rc_lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from 0 to 25) (default 25)"
        },
        "-sharpness": {
            "valueType": "int",
            "explanation": "Increase sharpness at the expense of lower PSNR (from -1 to 7) (default -1)"
        }
    },
    "libwebp_anim": {
        "-lossless": {
            "valueType": "int",
            "explanation": "Use lossless mode (from 0 to 1) (default 0)"
        },
        "-preset": {
            "valueType": "int",
            "explanation": "Configuration preset (from -1 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "-1",
                    "explanation": "do not use a preset"
                },
                "default": {
                    "value": "0",
                    "explanation": "default preset"
                },
                "picture": {
                    "value": "1",
                    "explanation": "digital picture, like portrait, inner shot"
                },
                "photo": {
                    "value": "2",
                    "explanation": "outdoor photograph, with natural lighting"
                },
                "drawing": {
                    "value": "3",
                    "explanation": "hand or line drawing, with high-contrast details"
                },
                "icon": {
                    "value": "4",
                    "explanation": "small-sized colorful images"
                },
                "text": {
                    "value": "5",
                    "explanation": "text-like"
                }
            }
        },
        "-cr_threshold": {
            "valueType": "int",
            "explanation": "Conditional replenishment threshold (from 0 to INT_MAX) (default 0)"
        },
        "-cr_size": {
            "valueType": "int",
            "explanation": "Conditional replenishment block size (from 0 to 256) (default 16)"
        },
        "-quality": {
            "valueType": "float",
            "explanation": "Quality (from 0 to 100) (default 75)"
        }
    },
    "libwebp": {
        "-lossless": {
            "valueType": "int",
            "explanation": "Use lossless mode (from 0 to 1) (default 0)"
        },
        "-preset": {
            "valueType": "int",
            "explanation": "Configuration preset (from -1 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "-1",
                    "explanation": "do not use a preset"
                },
                "default": {
                    "value": "0",
                    "explanation": "default preset"
                },
                "picture": {
                    "value": "1",
                    "explanation": "digital picture, like portrait, inner shot"
                },
                "photo": {
                    "value": "2",
                    "explanation": "outdoor photograph, with natural lighting"
                },
                "drawing": {
                    "value": "3",
                    "explanation": "hand or line drawing, with high-contrast details"
                },
                "icon": {
                    "value": "4",
                    "explanation": "small-sized colorful images"
                },
                "text": {
                    "value": "5",
                    "explanation": "text-like"
                }
            }
        },
        "-cr_threshold": {
            "valueType": "int",
            "explanation": "Conditional replenishment threshold (from 0 to INT_MAX) (default 0)"
        },
        "-cr_size": {
            "valueType": "int",
            "explanation": "Conditional replenishment block size (from 0 to 256) (default 16)"
        },
        "-quality": {
            "valueType": "float",
            "explanation": "Quality (from 0 to 100) (default 75)"
        }
    },
    "wmv1": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "wmv2": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "wrapped_avframe": {},
    "xbm": {},
    "xface": {},
    "xwd": {},
    "y41p": {},
    "yuv4": {},
    "zlib": {},
    "zmbv": {},
    "aac": {
        "-aac_coder": {
            "valueType": "int",
            "explanation": "Coding algorithm (from 0 to 2) (default fast)",
            "subValues": {
                "anmr": {
                    "value": "0",
                    "explanation": "ANMR method"
                },
                "twoloop": {
                    "value": "1",
                    "explanation": "Two loop searching method"
                },
                "fast": {
                    "value": "2",
                    "explanation": "Default fast search"
                }
            }
        },
        "-aac_ms": {
            "valueType": "boolean",
            "explanation": "Force M/S stereo coding (default auto)"
        },
        "-aac_is": {
            "valueType": "boolean",
            "explanation": "Intensity stereo coding (default true)"
        },
        "-aac_pns": {
            "valueType": "boolean",
            "explanation": "Perceptual noise substitution (default true)"
        },
        "-aac_tns": {
            "valueType": "boolean",
            "explanation": "Temporal noise shaping (default true)"
        },
        "-aac_ltp": {
            "valueType": "boolean",
            "explanation": "Long term prediction (default false)"
        },
        "-aac_pred": {
            "valueType": "boolean",
            "explanation": "AAC-Main prediction (default false)"
        },
        "-aac_pce": {
            "valueType": "boolean",
            "explanation": "Forces the use of PCEs (default false)"
        }
    },
    "aac_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "ac3": {
        "-center_mixlev": {
            "valueType": "float",
            "explanation": "Center Mix Level (from 0 to 1) (default 0.594604)"
        },
        "-surround_mixlev": {
            "valueType": "float",
            "explanation": "Surround Mix Level (from 0 to 1) (default 0.5)"
        },
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "ac3_fixed": {
        "-center_mixlev": {
            "valueType": "float",
            "explanation": "Center Mix Level (from 0 to 1) (default 0.594604)"
        },
        "-surround_mixlev": {
            "valueType": "float",
            "explanation": "Surround Mix Level (from 0 to 1) (default 0.5)"
        },
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "adpcm_adx": {},
    "adpcm_argo": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "g722": {},
    "g726": {
        "-code_size": {
            "valueType": "int",
            "explanation": "Bits per code (from 2 to 5) (default 4)"
        }
    },
    "g726le": {
        "-code_size": {
            "valueType": "int",
            "explanation": "Bits per code (from 2 to 5) (default 4)"
        }
    },
    "adpcm_ima_alp": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_amv": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_apm": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_qt": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_ssi": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_wav": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ms": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_swf": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_yamaha": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "alac": {
        "-min_prediction_order": {
            "valueType": "int",
            "explanation": "(from 1 to 30) (default 4)"
        },
        "-max_prediction_order": {
            "valueType": "int",
            "explanation": "(from 1 to 30) (default 6)"
        }
    },
    "alac_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "libopencore_amrnb": {
        "-dtx": {
            "valueType": "int",
            "explanation": "Allow DTX (generate comfort noise) (from 0 to 1) (default 0)"
        }
    },
    "aptx": {},
    "aptx_hd": {},
    "comfortnoise": {},
    "dca": {
        "-dca_adpcm": {
            "valueType": "boolean",
            "explanation": "Use ADPCM encoding (default false)"
        }
    },
    "eac3": {
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "flac": {
        "-lpc_coeff_precision": {
            "valueType": "int",
            "explanation": "LPC coefficient precision (from 0 to 15) (default 15)"
        },
        "-lpc_type": {
            "valueType": "int",
            "explanation": "LPC algorithm (from -1 to 3) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "fixed": {
                    "value": "1",
                    "explanation": null
                },
                "levinson": {
                    "value": "2",
                    "explanation": null
                },
                "cholesky": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-lpc_passes": {
            "valueType": "int",
            "explanation": "Number of passes to use for Cholesky factorization during LPC analysis (from 1 to INT_MAX) (default 2)"
        },
        "-min_partition_order": {
            "valueType": "int",
            "explanation": "(from -1 to 8) (default -1)"
        },
        "-max_partition_order": {
            "valueType": "int",
            "explanation": "(from -1 to 8) (default -1)"
        },
        "-prediction_order_method": {
            "valueType": "int",
            "explanation": "Search method for selecting prediction order (from -1 to 5) (default -1)",
            "subValues": {
                "estimation": {
                    "value": "0",
                    "explanation": null
                },
                "2level": {
                    "value": "1",
                    "explanation": null
                },
                "4level": {
                    "value": "2",
                    "explanation": null
                },
                "8level": {
                    "value": "3",
                    "explanation": null
                },
                "search": {
                    "value": "4",
                    "explanation": null
                },
                "log": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-ch_mode": {
            "valueType": "int",
            "explanation": "Stereo decorrelation mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "indep": {
                    "value": "0",
                    "explanation": null
                },
                "left_side": {
                    "value": "1",
                    "explanation": null
                },
                "right_side": {
                    "value": "2",
                    "explanation": null
                },
                "mid_side": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-exact_rice_parameters": {
            "valueType": "boolean",
            "explanation": "Calculate rice parameters exactly (default false)"
        },
        "-multi_dim_quant": {
            "valueType": "boolean",
            "explanation": "Multi-dimensional quantization (default false)"
        },
        "-min_prediction_order": {
            "valueType": "int",
            "explanation": "(from -1 to 32) (default -1)"
        },
        "-max_prediction_order": {
            "valueType": "int",
            "explanation": "(from -1 to 32) (default -1)"
        }
    },
    "g723_1": {},
    "ilbc_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "mlp": {},
    "mp2": {},
    "mp2fixed": {},
    "libmp3lame": {
        "-reservoir": {
            "valueType": "boolean",
            "explanation": "use bit reservoir (default true)"
        },
        "-joint_stereo": {
            "valueType": "boolean",
            "explanation": "use joint stereo (default true)"
        },
        "-abr": {
            "valueType": "boolean",
            "explanation": "use ABR (default false)"
        }
    },
    "nellymoser": {},
    "opus": {
        "-opus_delay": {
            "valueType": "float",
            "explanation": "Maximum delay in milliseconds (from 2.5 to 360) (default 360)"
        },
        "-apply_phase_inv": {
            "valueType": "boolean",
            "explanation": "Apply intensity stereo phase inversion (default true)"
        }
    },
    "libopus": {
        "-application": {
            "valueType": "int",
            "explanation": "Intended application type (from 2048 to 2051) (default audio)",
            "subValues": {
                "voip": {
                    "value": "2048",
                    "explanation": "Favor improved speech intelligibility"
                },
                "audio": {
                    "value": "2049",
                    "explanation": "Favor faithfulness to the input"
                },
                "lowdelay": {
                    "value": "2051",
                    "explanation": "Restrict to only the lowest delay modes"
                }
            }
        },
        "-frame_duration": {
            "valueType": "float",
            "explanation": "Duration of a frame in milliseconds (from 2.5 to 120) (default 20)"
        },
        "-packet_loss": {
            "valueType": "int",
            "explanation": "Expected packet loss percentage (from 0 to 100) (default 0)"
        },
        "-fec": {
            "valueType": "boolean",
            "explanation": "Enable inband FEC. Expected packet loss must be non-zero (default false)"
        },
        "-vbr": {
            "valueType": "int",
            "explanation": "Variable bit rate mode (from 0 to 2) (default on)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": "Use constant bit rate"
                },
                "on": {
                    "value": "1",
                    "explanation": "Use variable bit rate"
                },
                "constrained": {
                    "value": "2",
                    "explanation": "Use constrained VBR"
                }
            }
        },
        "-mapping_family": {
            "valueType": "int",
            "explanation": "Channel Mapping Family (from -1 to 255) (default -1)"
        },
        "-apply_phase_inv": {
            "valueType": "boolean",
            "explanation": "Apply intensity stereo phase inversion (default true)"
        }
    },
    "pcm_alaw": {},
    "pcm_alaw_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "pcm_dvd": {},
    "pcm_f32be": {},
    "pcm_f32le": {},
    "pcm_f64be": {},
    "pcm_f64le": {},
    "pcm_mulaw": {},
    "pcm_mulaw_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "pcm_s16be": {},
    "pcm_s16be_planar": {},
    "pcm_s16le": {},
    "pcm_s16le_planar": {},
    "pcm_s24be": {},
    "pcm_s24daud": {},
    "pcm_s24le": {},
    "pcm_s24le_planar": {},
    "pcm_s32be": {},
    "pcm_s32le": {},
    "pcm_s32le_planar": {},
    "pcm_s64be": {},
    "pcm_s64le": {},
    "pcm_s8": {},
    "pcm_s8_planar": {},
    "pcm_u16be": {},
    "pcm_u16le": {},
    "pcm_u24be": {},
    "pcm_u24le": {},
    "pcm_u32be": {},
    "pcm_u32le": {},
    "pcm_u8": {},
    "pcm_vidc": {},
    "real_144": {},
    "roq_dpcm": {},
    "s302m": {},
    "sbc": {
        "-sbc_delay": {
            "valueType": "duration",
            "explanation": "set maximum algorithmic latency (default 0.013)"
        },
        "-msbc": {
            "valueType": "boolean",
            "explanation": "use mSBC mode (wideband speech mono SBC) (default false)"
        }
    },
    "sonic": {},
    "sonicls": {},
    "libspeex": {
        "-abr": {
            "valueType": "int",
            "explanation": "Use average bit rate (from 0 to 1) (default 0)"
        },
        "-cbr_quality": {
            "valueType": "int",
            "explanation": "Set quality value (0 to 10) for CBR (from 0 to 10) (default 8)"
        },
        "-frames_per_packet": {
            "valueType": "int",
            "explanation": "Number of frames to encode in each packet (from 1 to 8) (default 1)"
        },
        "-vad": {
            "valueType": "int",
            "explanation": "Voice Activity Detection (from 0 to 1) (default 0)"
        },
        "-dtx": {
            "valueType": "int",
            "explanation": "Discontinuous Transmission (from 0 to 1) (default 0)"
        }
    },
    "truehd": {},
    "tta": {},
    "vorbis": {},
    "libvorbis": {
        "-iblock": {
            "valueType": "double",
            "explanation": "Sets the impulse block bias (from -15 to 0) (default 0)"
        }
    },
    "wavpack": {
        "-joint_stereo": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-optimize_mono": {
            "valueType": "boolean",
            "explanation": "(default false)"
        }
    },
    "wmav1": {},
    "wmav2": {},
    "ssa": {},
    "ass": {},
    "dvbsub": {},
    "dvdsub": {
        "-palette": {
            "valueType": "string",
            "explanation": "set the global palette"
        },
        "-even_rows_fix": {
            "valueType": "boolean",
            "explanation": "Make number of rows even (workaround for some players) (default false)"
        }
    },
    "mov_text": {
        "-height": {
            "valueType": "int",
            "explanation": "Frame height, usually video height (from 0 to INT_MAX) (default 0)"
        }
    },
    "srt": {},
    "subrip": {},
    "text": {},
    "ttml": {},
    "webvtt": {},
    "xsub": {}
}