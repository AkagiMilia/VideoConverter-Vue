{
    "a64multi": {},
    "a64multi5": {},
    "alias_pix": {},
    "amv": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-huffman": {
            "valueType": "int",
            "explanation": "Huffman table strategy (from 0 to 1) (default optimal)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": null
                },
                "optimal": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "apng": {
        "-dpi": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per inch) (from 0 to 65536) (default 0)"
        },
        "-dpm": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per meter) (from 0 to 65536) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "sub": {
                    "value": "1",
                    "explanation": null
                },
                "up": {
                    "value": "2",
                    "explanation": null
                },
                "avg": {
                    "value": "3",
                    "explanation": null
                },
                "paeth": {
                    "value": "4",
                    "explanation": null
                },
                "mixed": {
                    "value": "5",
                    "explanation": null
                }
            }
        }
    },
    "asv1": {},
    "asv2": {},
    "libaom-av1": {
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from 0 to 8) (default 1)"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 2) (default -1)"
        },
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead at for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-max-frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to 6) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "adaptive quantization mode (from -1 to 4) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "Aq not used"
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance based Aq"
                },
                "complexity": {
                    "value": "2",
                    "explanation": "Complexity based Aq"
                },
                "cyclic": {
                    "value": "3",
                    "explanation": "Cyclic Refresh Aq"
                }
            }
        },
        "-error-resilience": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                }
            }
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-denoise-noise-level": {
            "valueType": "int",
            "explanation": "Amount of noise to be removed (from -1 to INT_MAX) (default -1)"
        },
        "-denoise-block-size": {
            "valueType": "int",
            "explanation": "Denoise block size (from -1 to INT_MAX) (default -1)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-minsection-pct": {
            "valueType": "int",
            "explanation": "GOP min bitrate (% of target) (from -1 to 100) (default -1)"
        },
        "-maxsection-pct": {
            "valueType": "int",
            "explanation": "GOP max bitrate (% of target) (from -1 to 5000) (default -1)"
        },
        "-frame-parallel": {
            "valueType": "boolean",
            "explanation": "Enable frame parallel decodability features (default auto)"
        },
        "-tiles": {
            "valueType": "image_size",
            "explanation": "Tile columns x rows"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "Log2 of number of tile columns to use (from -1 to 6) (default -1)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "Log2 of number of tile rows to use (from -1 to 6) (default -1)"
        },
        "-row-mt": {
            "valueType": "boolean",
            "explanation": "Enable row based multi-threading (default auto)"
        },
        "-enable-cdef": {
            "valueType": "boolean",
            "explanation": "Enable CDEF filtering (default auto)"
        },
        "-enable-global-motion": {
            "valueType": "boolean",
            "explanation": "Enable global motion (default auto)"
        },
        "-enable-intrabc": {
            "valueType": "boolean",
            "explanation": "Enable intra block copy prediction mode (default auto)"
        },
        "-enable-restoration": {
            "valueType": "boolean",
            "explanation": "Enable Loop Restoration filtering (default auto)"
        },
        "-usage": {
            "valueType": "int",
            "explanation": "Quality and compression efficiency vs speed trade-off (from 0 to INT_MAX) (default good)",
            "subValues": {
                "good": {
                    "value": "0",
                    "explanation": "Good quality"
                },
                "realtime": {
                    "value": "1",
                    "explanation": "Realtime encoding"
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "The metric that the encoder tunes for. Automatically chosen by the encoder by default (from -1 to 1) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-enable-rect-partitions": {
            "valueType": "boolean",
            "explanation": "Enable rectangular partitions (default auto)"
        },
        "-enable-1to4-partitions": {
            "valueType": "boolean",
            "explanation": "Enable 1:4/4:1 partitions (default auto)"
        },
        "-enable-ab-partitions": {
            "valueType": "boolean",
            "explanation": "Enable ab shape partitions (default auto)"
        },
        "-enable-angle-delta": {
            "valueType": "boolean",
            "explanation": "Enable angle delta intra prediction (default auto)"
        },
        "-enable-cfl-intra": {
            "valueType": "boolean",
            "explanation": "Enable chroma predicted from luma intra prediction (default auto)"
        },
        "-enable-filter-intra": {
            "valueType": "boolean",
            "explanation": "Enable filter intra predictor (default auto)"
        },
        "-enable-intra-edge-filter": {
            "valueType": "boolean",
            "explanation": "Enable intra edge filter (default auto)"
        },
        "-enable-smooth-intra": {
            "valueType": "boolean",
            "explanation": "Enable smooth intra prediction mode (default auto)"
        },
        "-enable-paeth-intra": {
            "valueType": "boolean",
            "explanation": "Enable paeth predictor in intra prediction (default auto)"
        },
        "-enable-palette": {
            "valueType": "boolean",
            "explanation": "Enable palette prediction mode (default auto)"
        },
        "-enable-flip-idtx": {
            "valueType": "boolean",
            "explanation": "Enable extended transform type (default auto)"
        },
        "-enable-tx64": {
            "valueType": "boolean",
            "explanation": "Enable 64-pt transform (default auto)"
        },
        "-reduced-tx-type-set": {
            "valueType": "boolean",
            "explanation": "Use reduced set of transform types (default auto)"
        },
        "-use-intra-dct-only": {
            "valueType": "boolean",
            "explanation": "Use DCT only for INTRA modes (default auto)"
        },
        "-use-inter-dct-only": {
            "valueType": "boolean",
            "explanation": "Use DCT only for INTER modes (default auto)"
        },
        "-use-intra-default-tx-only": {
            "valueType": "boolean",
            "explanation": "Use default-transform only for INTRA modes (default auto)"
        },
        "-enable-ref-frame-mvs": {
            "valueType": "boolean",
            "explanation": "Enable temporal mv prediction (default auto)"
        },
        "-enable-reduced-reference-set": {
            "valueType": "boolean",
            "explanation": "Use reduced set of single and compound references (default auto)"
        },
        "-enable-obmc": {
            "valueType": "boolean",
            "explanation": "Enable obmc (default auto)"
        },
        "-enable-dual-filter": {
            "valueType": "boolean",
            "explanation": "Enable dual filter (default auto)"
        },
        "-enable-diff-wtd-comp": {
            "valueType": "boolean",
            "explanation": "Enable difference-weighted compound (default auto)"
        },
        "-enable-dist-wtd-comp": {
            "valueType": "boolean",
            "explanation": "Enable distance-weighted compound (default auto)"
        },
        "-enable-onesided-comp": {
            "valueType": "boolean",
            "explanation": "Enable one sided compound (default auto)"
        },
        "-enable-interinter-wedge": {
            "valueType": "boolean",
            "explanation": "Enable interinter wedge compound (default auto)"
        },
        "-enable-interintra-wedge": {
            "valueType": "boolean",
            "explanation": "Enable interintra wedge compound (default auto)"
        },
        "-enable-masked-comp": {
            "valueType": "boolean",
            "explanation": "Enable masked compound (default auto)"
        },
        "-enable-interintra-comp": {
            "valueType": "boolean",
            "explanation": "Enable interintra compound (default auto)"
        },
        "-enable-smooth-interintra": {
            "valueType": "boolean",
            "explanation": "Enable smooth interintra mode (default auto)"
        },
        "-aom-params": {
            "valueType": "dictionary",
            "explanation": "Set libaom options using a :-separated list of key=value pairs"
        }
    },
    "librav1e": {
        "-qp": {
            "valueType": "int",
            "explanation": "use constant quantizer mode (from -1 to 255) (default -1)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "what speed preset to use (from -1 to 10) (default -1)"
        },
        "-tiles": {
            "valueType": "int",
            "explanation": "number of tiles encode with (from -1 to I64_MAX) (default 0)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "number of tiles rows to encode with (from -1 to I64_MAX) (default 0)"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "number of tiles columns to encode with (from -1 to I64_MAX) (default 0)"
        },
        "-rav1e-params": {
            "valueType": "dictionary",
            "explanation": "set the rav1e configuration using a :-separated list of key=value parameters"
        }
    },
    "avrp": {},
    "avui": {},
    "ayuv": {},
    "bmp": {},
    "cfhd": {
        "-quality": {
            "valueType": "int",
            "explanation": "set quality (from 0 to 12) (default film3+)",
            "subValues": {
                "film3+": {
                    "value": "0",
                    "explanation": null
                },
                "film3": {
                    "value": "1",
                    "explanation": null
                },
                "film2+": {
                    "value": "2",
                    "explanation": null
                },
                "film2": {
                    "value": "3",
                    "explanation": null
                },
                "film1.5": {
                    "value": "4",
                    "explanation": null
                },
                "film1+": {
                    "value": "5",
                    "explanation": null
                },
                "film1": {
                    "value": "6",
                    "explanation": null
                },
                "high+": {
                    "value": "7",
                    "explanation": null
                },
                "high": {
                    "value": "8",
                    "explanation": null
                },
                "medium+": {
                    "value": "9",
                    "explanation": null
                },
                "medium": {
                    "value": "10",
                    "explanation": null
                },
                "low+": {
                    "value": "11",
                    "explanation": null
                },
                "low": {
                    "value": "12",
                    "explanation": null
                }
            }
        }
    },
    "cinepak": {
        "-max_extra_cb_iterations": {
            "valueType": "int",
            "explanation": "Max extra codebook recalculation passes, more is better and slower (from 0 to INT_MAX) (default 2)"
        },
        "-skip_empty_cb": {
            "valueType": "boolean",
            "explanation": "Avoid wasting bytes, ignore vintage MacOS decoder (default false)"
        },
        "-max_strips": {
            "valueType": "int",
            "explanation": "Limit strips/frame, vintage compatible is 1..3, otherwise the more the better (from 1 to 32) (default 3)"
        },
        "-min_strips": {
            "valueType": "int",
            "explanation": "Enforce min strips/frame, more is worse and faster, must be <= max_strips (from 1 to 32) (default 1)"
        },
        "-strip_number_adaptivity": {
            "valueType": "int",
            "explanation": "How fast the strip number adapts, more is slightly better, much slower (from 0 to 31) (default 0)"
        }
    },
    "cljr": {
        "-dither_type": {
            "valueType": "int",
            "explanation": "Dither type (from 0 to 2) (default 1)"
        }
    },
    "vc2": {
        "-tolerance": {
            "valueType": "double",
            "explanation": "Max undershoot in percent (from 0 to 45) (default 5)"
        },
        "-slice_width": {
            "valueType": "int",
            "explanation": "Slice width (from 32 to 1024) (default 32)"
        },
        "-slice_height": {
            "valueType": "int",
            "explanation": "Slice height (from 8 to 1024) (default 16)"
        },
        "-wavelet_depth": {
            "valueType": "int",
            "explanation": "Transform depth (from 1 to 5) (default 4)"
        },
        "-wavelet_type": {
            "valueType": "int",
            "explanation": "Transform type (from 0 to 7) (default 9_7)",
            "subValues": {
                "9_7": {
                    "value": "0",
                    "explanation": "Deslauriers-Dubuc (9,7)"
                },
                "5_3": {
                    "value": "1",
                    "explanation": "LeGall (5,3)"
                },
                "haar": {
                    "value": "4",
                    "explanation": "Haar (with shift)"
                },
                "haar_noshift": {
                    "value": "3",
                    "explanation": "Haar (without shift)"
                }
            }
        },
        "-qm": {
            "valueType": "int",
            "explanation": "Custom quantization matrix (from 0 to 3) (default default)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": "Default from the specifications"
                },
                "color": {
                    "value": "1",
                    "explanation": "Prevents low bitrate discoloration"
                },
                "flat": {
                    "value": "2",
                    "explanation": "Optimize for PSNR"
                }
            }
        }
    },
    "dnxhd": {
        "-nitris_compat": {
            "valueType": "boolean",
            "explanation": "encode with Avid Nitris compatibility (default false)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 0)"
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from 0 to 5) (default dnxhd)",
            "subValues": {
                "dnxhd": {
                    "value": "0",
                    "explanation": null
                },
                "dnxhr_444": {
                    "value": "5",
                    "explanation": null
                },
                "dnxhr_hqx": {
                    "value": "4",
                    "explanation": null
                },
                "dnxhr_hq": {
                    "value": "3",
                    "explanation": null
                },
                "dnxhr_sq": {
                    "value": "2",
                    "explanation": null
                },
                "dnxhr_lb": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "dpx": {},
    "dvvideo": {
        "-quant_deadzone": {
            "valueType": "int",
            "explanation": "Quantizer dead zone (from 0 to 1024) (default 7)"
        }
    },
    "exr": {
        "-compression": {
            "valueType": "int",
            "explanation": "set compression type (from 0 to 3) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "none"
                },
                "rle": {
                    "value": "1",
                    "explanation": "RLE"
                },
                "zip1": {
                    "value": "2",
                    "explanation": "ZIP1"
                },
                "zip16": {
                    "value": "3",
                    "explanation": "ZIP16"
                }
            }
        },
        "-format": {
            "valueType": "int",
            "explanation": "set pixel type (from 1 to 2) (default float)",
            "subValues": {
                "half": {
                    "value": "1",
                    "explanation": null
                },
                "float": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-gamma": {
            "valueType": "float",
            "explanation": "set gamma (from 0.001 to FLT_MAX) (default 1)"
        }
    },
    "ffv1": {
        "-slicecrc": {
            "valueType": "boolean",
            "explanation": "Protect slices with CRCs (default auto)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -2 to 2) (default rice)",
            "subValues": {
                "rice": {
                    "value": "0",
                    "explanation": "Golomb rice"
                },
                "range_def": {
                    "value": "-2",
                    "explanation": "Range with default table"
                },
                "range_tab": {
                    "value": "2",
                    "explanation": "Range with custom table"
                },
                "ac": {
                    "value": "1",
                    "explanation": "Range with custom table (the ac option exists for compatibility and is deprecated)"
                }
            }
        },
        "-context": {
            "valueType": "int",
            "explanation": "Context model (from 0 to 1) (default 0)"
        }
    },
    "ffvhuff": {
        "-non_deterministic": {
            "valueType": "boolean",
            "explanation": "Allow multithreading for e.g. context=1 at the expense of determinism (default true)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-context": {
            "valueType": "int",
            "explanation": "Set per-frame huffman tables (from 0 to 1) (default 0)"
        }
    },
    "fits": {},
    "flashsv": {},
    "flashsv2": {},
    "flv": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "gif": {
        "-gifflags": {
            "valueType": "flags",
            "explanation": "set GIF flags (default offsetting+transdiff)",
            "subValues": {
                "offsetting": {
                    "value": "offsetting",
                    "explanation": "enable picture offsetting"
                },
                "transdiff": {
                    "value": "transdiff",
                    "explanation": "enable transparency detection between frames"
                }
            }
        },
        "-gifimage": {
            "valueType": "boolean",
            "explanation": "enable encoding only images per frame (default false)"
        },
        "-global_palette": {
            "valueType": "boolean",
            "explanation": "write a palette to the global gif header where feasible (default true)"
        }
    },
    "h261": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "h263": {
        "-obmc": {
            "valueType": "boolean",
            "explanation": "use overlapped block motion compensation. (default false)"
        },
        "-mb_info": {
            "valueType": "int",
            "explanation": "emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size (from 0 to INT_MAX) (default 0)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "h263p": {
        "-umv": {
            "valueType": "boolean",
            "explanation": "Use unlimited motion vectors. (default false)"
        },
        "-aiv": {
            "valueType": "boolean",
            "explanation": "Use alternative inter VLC. (default false)"
        },
        "-obmc": {
            "valueType": "boolean",
            "explanation": "use overlapped block motion compensation. (default false)"
        },
        "-structured_slices": {
            "valueType": "boolean",
            "explanation": "Write slice start position at every GOB header instead of just GOB number. (default false)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "libx264": {
        "-preset": {
            "valueType": "string",
            "explanation": "Set the encoding preset (cf. x264 --fullhelp) (default \"medium\")"
        },
        "-tune": {
            "valueType": "string",
            "explanation": "Tune the encoding params (cf. x264 --fullhelp)"
        },
        "-profile": {
            "valueType": "string",
            "explanation": "Set profile restrictions (cf. x264 --fullhelp)"
        },
        "-fastfirstpass": {
            "valueType": "boolean",
            "explanation": "Use fast settings when encoding first pass (default true)"
        },
        "-level": {
            "valueType": "string",
            "explanation": "Specify level (as defined by Annex A)"
        },
        "-passlogfile": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-wpredp": {
            "valueType": "string",
            "explanation": "Weighted prediction for P-frames"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-x264opts": {
            "valueType": "string",
            "explanation": "x264 options"
        },
        "-crf": {
            "valueType": "float",
            "explanation": "Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)"
        },
        "-crf_max": {
            "valueType": "float",
            "explanation": "In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)"
        },
        "-qp": {
            "valueType": "int",
            "explanation": "Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "AQ method (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance AQ (complexity mask)"
                },
                "autovariance": {
                    "value": "2",
                    "explanation": "Auto-variance AQ"
                },
                "autovariance-biased": {
                    "value": "3",
                    "explanation": "Auto-variance AQ with bias to dark scenes"
                }
            }
        },
        "-aq-strength": {
            "valueType": "float",
            "explanation": "AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)"
        },
        "-psy": {
            "valueType": "boolean",
            "explanation": "Use psychovisual optimizations. (default auto)"
        },
        "-psy-rd": {
            "valueType": "string",
            "explanation": "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format."
        },
        "-rc-lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)"
        },
        "-weightb": {
            "valueType": "boolean",
            "explanation": "Weighted prediction for B-frames. (default auto)"
        },
        "-weightp": {
            "valueType": "int",
            "explanation": "Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "simple": {
                    "value": "1",
                    "explanation": null
                },
                "smart": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim": {
            "valueType": "boolean",
            "explanation": "Calculate and print SSIM stats. (default auto)"
        },
        "-intra-refresh": {
            "valueType": "boolean",
            "explanation": "Use Periodic Intra Refresh instead of IDR frames. (default auto)"
        },
        "-bluray-compat": {
            "valueType": "boolean",
            "explanation": "Bluray compatibility workarounds. (default auto)"
        },
        "-b-bias": {
            "valueType": "int",
            "explanation": "Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)"
        },
        "-b-pyramid": {
            "valueType": "int",
            "explanation": "Keep some B-frames as references. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "strict": {
                    "value": "1",
                    "explanation": "Strictly hierarchical pyramid"
                },
                "normal": {
                    "value": "2",
                    "explanation": "Non-strict (not Blu-ray compatible)"
                }
            }
        },
        "-mixed-refs": {
            "valueType": "boolean",
            "explanation": "One reference per partition, as opposed to one reference per macroblock (default auto)"
        },
        "-8x8dct": {
            "valueType": "boolean",
            "explanation": "High profile 8x8 transform. (default auto)"
        },
        "-fast-pskip": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-aud": {
            "valueType": "boolean",
            "explanation": "Use access unit delimiters. (default auto)"
        },
        "-mbtree": {
            "valueType": "boolean",
            "explanation": "Use macroblock tree ratecontrol. (default auto)"
        },
        "-deblock": {
            "valueType": "string",
            "explanation": "Loop filter parameters, in <alpha:beta> form."
        },
        "-cplxblur": {
            "valueType": "float",
            "explanation": "Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)"
        },
        "-partitions": {
            "valueType": "string",
            "explanation": "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all"
        },
        "-direct-pred": {
            "valueType": "int",
            "explanation": "Direct MV prediction mode (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "spatial": {
                    "value": "1",
                    "explanation": null
                },
                "temporal": {
                    "value": "2",
                    "explanation": null
                },
                "auto": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-slice-max-size": {
            "valueType": "int",
            "explanation": "Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)"
        },
        "-stats": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-nal-hrd": {
            "valueType": "int",
            "explanation": "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "vbr": {
                    "value": "1",
                    "explanation": null
                },
                "cbr": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-avcintra-class": {
            "valueType": "int",
            "explanation": "AVC-Intra class 50/100/200 (from -1 to 200) (default -1)"
        },
        "-me_method": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-motion-est": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "If forcing keyframes, force them as IDR frames. (default false)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -1 to 1) (default default)",
            "subValues": {
                "default": {
                    "value": "-1",
                    "explanation": null
                },
                "cavlc": {
                    "value": "0",
                    "explanation": null
                },
                "cabac": {
                    "value": "1",
                    "explanation": null
                },
                "vlc": {
                    "value": "0",
                    "explanation": null
                },
                "ac": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)"
        },
        "-chromaoffset": {
            "valueType": "int",
            "explanation": "QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default -1)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default -1)"
        },
        "-x264-params": {
            "valueType": "dictionary",
            "explanation": "Override the x264 configuration using a :-separated list of key=value parameters"
        }
    },
    "libx264rgb": {
        "-preset": {
            "valueType": "string",
            "explanation": "Set the encoding preset (cf. x264 --fullhelp) (default \"medium\")"
        },
        "-tune": {
            "valueType": "string",
            "explanation": "Tune the encoding params (cf. x264 --fullhelp)"
        },
        "-profile": {
            "valueType": "string",
            "explanation": "Set profile restrictions (cf. x264 --fullhelp)"
        },
        "-fastfirstpass": {
            "valueType": "boolean",
            "explanation": "Use fast settings when encoding first pass (default true)"
        },
        "-level": {
            "valueType": "string",
            "explanation": "Specify level (as defined by Annex A)"
        },
        "-passlogfile": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-wpredp": {
            "valueType": "string",
            "explanation": "Weighted prediction for P-frames"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-x264opts": {
            "valueType": "string",
            "explanation": "x264 options"
        },
        "-crf": {
            "valueType": "float",
            "explanation": "Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)"
        },
        "-crf_max": {
            "valueType": "float",
            "explanation": "In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)"
        },
        "-qp": {
            "valueType": "int",
            "explanation": "Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "AQ method (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance AQ (complexity mask)"
                },
                "autovariance": {
                    "value": "2",
                    "explanation": "Auto-variance AQ"
                },
                "autovariance-biased": {
                    "value": "3",
                    "explanation": "Auto-variance AQ with bias to dark scenes"
                }
            }
        },
        "-aq-strength": {
            "valueType": "float",
            "explanation": "AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)"
        },
        "-psy": {
            "valueType": "boolean",
            "explanation": "Use psychovisual optimizations. (default auto)"
        },
        "-psy-rd": {
            "valueType": "string",
            "explanation": "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format."
        },
        "-rc-lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)"
        },
        "-weightb": {
            "valueType": "boolean",
            "explanation": "Weighted prediction for B-frames. (default auto)"
        },
        "-weightp": {
            "valueType": "int",
            "explanation": "Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "simple": {
                    "value": "1",
                    "explanation": null
                },
                "smart": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim": {
            "valueType": "boolean",
            "explanation": "Calculate and print SSIM stats. (default auto)"
        },
        "-intra-refresh": {
            "valueType": "boolean",
            "explanation": "Use Periodic Intra Refresh instead of IDR frames. (default auto)"
        },
        "-bluray-compat": {
            "valueType": "boolean",
            "explanation": "Bluray compatibility workarounds. (default auto)"
        },
        "-b-bias": {
            "valueType": "int",
            "explanation": "Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)"
        },
        "-b-pyramid": {
            "valueType": "int",
            "explanation": "Keep some B-frames as references. (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "strict": {
                    "value": "1",
                    "explanation": "Strictly hierarchical pyramid"
                },
                "normal": {
                    "value": "2",
                    "explanation": "Non-strict (not Blu-ray compatible)"
                }
            }
        },
        "-mixed-refs": {
            "valueType": "boolean",
            "explanation": "One reference per partition, as opposed to one reference per macroblock (default auto)"
        },
        "-8x8dct": {
            "valueType": "boolean",
            "explanation": "High profile 8x8 transform. (default auto)"
        },
        "-fast-pskip": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-aud": {
            "valueType": "boolean",
            "explanation": "Use access unit delimiters. (default auto)"
        },
        "-mbtree": {
            "valueType": "boolean",
            "explanation": "Use macroblock tree ratecontrol. (default auto)"
        },
        "-deblock": {
            "valueType": "string",
            "explanation": "Loop filter parameters, in <alpha:beta> form."
        },
        "-cplxblur": {
            "valueType": "float",
            "explanation": "Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)"
        },
        "-partitions": {
            "valueType": "string",
            "explanation": "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all"
        },
        "-direct-pred": {
            "valueType": "int",
            "explanation": "Direct MV prediction mode (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "spatial": {
                    "value": "1",
                    "explanation": null
                },
                "temporal": {
                    "value": "2",
                    "explanation": null
                },
                "auto": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-slice-max-size": {
            "valueType": "int",
            "explanation": "Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)"
        },
        "-stats": {
            "valueType": "string",
            "explanation": "Filename for 2 pass stats"
        },
        "-nal-hrd": {
            "valueType": "int",
            "explanation": "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "vbr": {
                    "value": "1",
                    "explanation": null
                },
                "cbr": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-avcintra-class": {
            "valueType": "int",
            "explanation": "AVC-Intra class 50/100/200 (from -1 to 200) (default -1)"
        },
        "-me_method": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-motion-est": {
            "valueType": "int",
            "explanation": "Set motion estimation method (from -1 to 4) (default -1)",
            "subValues": {
                "dia": {
                    "value": "0",
                    "explanation": null
                },
                "hex": {
                    "value": "1",
                    "explanation": null
                },
                "umh": {
                    "value": "2",
                    "explanation": null
                },
                "esa": {
                    "value": "3",
                    "explanation": null
                },
                "tesa": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "If forcing keyframes, force them as IDR frames. (default false)"
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Coder type (from -1 to 1) (default default)",
            "subValues": {
                "default": {
                    "value": "-1",
                    "explanation": null
                },
                "cavlc": {
                    "value": "0",
                    "explanation": null
                },
                "cabac": {
                    "value": "1",
                    "explanation": null
                },
                "vlc": {
                    "value": "0",
                    "explanation": null
                },
                "ac": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)"
        },
        "-chromaoffset": {
            "valueType": "int",
            "explanation": "QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default -1)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default -1)"
        },
        "-x264-params": {
            "valueType": "dictionary",
            "explanation": "Override the x264 configuration using a :-separated list of key=value parameters"
        }
    },
    "h264_videotoolbox": {
        "-profile": {
            "valueType": "int",
            "explanation": "Profile (from 0 to 5) (default 0)",
            "subValues": {
                "baseline": {
                    "value": "1",
                    "explanation": "Baseline Profile"
                },
                "main": {
                    "value": "2",
                    "explanation": "Main Profile"
                },
                "high": {
                    "value": "3",
                    "explanation": "High Profile"
                },
                "extended": {
                    "value": "4",
                    "explanation": "Extend Profile"
                }
            }
        },
        "-level": {
            "valueType": "int",
            "explanation": "Level (from 0 to 52) (default 0)",
            "subValues": {
                "1.3": {
                    "value": "13",
                    "explanation": "Level 1.3, only available with Baseline Profile"
                },
                "3.0": {
                    "value": "30",
                    "explanation": "Level 3.0"
                },
                "3.1": {
                    "value": "31",
                    "explanation": "Level 3.1"
                },
                "3.2": {
                    "value": "32",
                    "explanation": "Level 3.2"
                },
                "4.0": {
                    "value": "40",
                    "explanation": "Level 4.0"
                },
                "4.1": {
                    "value": "41",
                    "explanation": "Level 4.1"
                },
                "4.2": {
                    "value": "42",
                    "explanation": "Level 4.2"
                },
                "5.0": {
                    "value": "50",
                    "explanation": "Level 5.0"
                },
                "5.1": {
                    "value": "51",
                    "explanation": "Level 5.1"
                },
                "5.2": {
                    "value": "52",
                    "explanation": "Level 5.2"
                }
            }
        },
        "-coder": {
            "valueType": "int",
            "explanation": "Entropy coding (from 0 to 2) (default 0)",
            "subValues": {
                "cavlc": {
                    "value": "1",
                    "explanation": "CAVLC entropy coding"
                },
                "vlc": {
                    "value": "1",
                    "explanation": "CAVLC entropy coding"
                },
                "cabac": {
                    "value": "2",
                    "explanation": "CABAC entropy coding"
                },
                "ac": {
                    "value": "2",
                    "explanation": "CABAC entropy coding"
                }
            }
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-allow_sw": {
            "valueType": "boolean",
            "explanation": "Allow software encoding (default false)"
        },
        "-require_sw": {
            "valueType": "boolean",
            "explanation": "Require software encoding (default false)"
        },
        "-realtime": {
            "valueType": "boolean",
            "explanation": "Hint that encoding should happen in real-time if not faster (e.g. capturing from camera). (default false)"
        },
        "-frames_before": {
            "valueType": "boolean",
            "explanation": "Other frames will come before the frames in this session. This helps smooth concatenation issues. (default false)"
        },
        "-frames_after": {
            "valueType": "boolean",
            "explanation": "Other frames will come after the frames in this session. This helps smooth concatenation issues. (default false)"
        }
    },
    "hap": {
        "-format": {
            "valueType": "int",
            "explanation": "(from 11 to 15) (default hap)",
            "subValues": {
                "hap": {
                    "value": "11",
                    "explanation": "Hap 1 (DXT1 textures)"
                },
                "hap_alpha": {
                    "value": "14",
                    "explanation": "Hap Alpha (DXT5 textures)"
                },
                "hap_q": {
                    "value": "15",
                    "explanation": "Hap Q (DXT5-YCoCg textures)"
                }
            }
        },
        "-chunks": {
            "valueType": "int",
            "explanation": "chunk count (from 1 to 64) (default 1)"
        },
        "-compressor": {
            "valueType": "int",
            "explanation": "second-stage compressor (from 160 to 176) (default snappy)",
            "subValues": {
                "none": {
                    "value": "160",
                    "explanation": "None"
                },
                "snappy": {
                    "value": "176",
                    "explanation": "Snappy"
                }
            }
        }
    },
    "libx265": {
        "-crf": {
            "valueType": "float",
            "explanation": "set the x265 crf (from -1 to FLT_MAX) (default -1)"
        },
        "-qp": {
            "valueType": "int",
            "explanation": "set the x265 qp (from -1 to INT_MAX) (default -1)"
        },
        "-forced-idr": {
            "valueType": "boolean",
            "explanation": "if forcing keyframes, force them as IDR frames (default false)"
        },
        "-preset": {
            "valueType": "string",
            "explanation": "set the x265 preset"
        },
        "-tune": {
            "valueType": "string",
            "explanation": "set the x265 tune parameter"
        },
        "-profile": {
            "valueType": "string",
            "explanation": "set the x265 profile"
        },
        "-x265-params": {
            "valueType": "dictionary",
            "explanation": "set the x265 configuration using a :-separated list of key=value parameters",
            "subValues": {
                "ssim":{
                    "valueType":"boolean",
                    "explanation":"xxx"
                },
                "rd":{
                    "valueType":"int",
                    "explanation":"xxx"
                }
            }
        }
    },
    "hevc_videotoolbox": {
        "-profile": {
            "valueType": "int",
            "explanation": "Profile (from 0 to 3) (default 0)",
            "subValues": {
                "main": {
                    "value": "1",
                    "explanation": "Main Profile"
                },
                "main10": {
                    "value": "2",
                    "explanation": "Main10 Profile"
                }
            }
        },
        "-alpha_quality": {
            "valueType": "double",
            "explanation": "Compression quality for the alpha channel (from 0 to 1) (default 0)"
        },
        "-allow_sw": {
            "valueType": "boolean",
            "explanation": "Allow software encoding (default false)"
        },
        "-require_sw": {
            "valueType": "boolean",
            "explanation": "Require software encoding (default false)"
        },
        "-realtime": {
            "valueType": "boolean",
            "explanation": "Hint that encoding should happen in real-time if not faster (e.g. capturing from camera). (default false)"
        },
        "-frames_before": {
            "valueType": "boolean",
            "explanation": "Other frames will come before the frames in this session. This helps smooth concatenation issues. (default false)"
        },
        "-frames_after": {
            "valueType": "boolean",
            "explanation": "Other frames will come after the frames in this session. This helps smooth concatenation issues. (default false)"
        }
    },
    "huffyuv": {
        "-non_deterministic": {
            "valueType": "boolean",
            "explanation": "Allow multithreading for e.g. context=1 at the expense of determinism (default true)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "jpeg2000": {
        "-format": {
            "valueType": "int",
            "explanation": "Codec Format (from 0 to 1) (default jp2)",
            "subValues": {
                "j2k": {
                    "value": "0",
                    "explanation": null
                },
                "jp2": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-tile_width": {
            "valueType": "int",
            "explanation": "Tile Width (from 1 to 1.07374e+09) (default 256)"
        },
        "-tile_height": {
            "valueType": "int",
            "explanation": "Tile Height (from 1 to 1.07374e+09) (default 256)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "DWT Type (from 0 to 1) (default dwt97int)",
            "subValues": {
                "dwt97int": {
                    "value": "0",
                    "explanation": null
                },
                "dwt53": {
                    "value": "0",
                    "explanation": null
                }
            }
        },
        "-sop": {
            "valueType": "int",
            "explanation": "SOP marker (from 0 to 1) (default 0)"
        },
        "-eph": {
            "valueType": "int",
            "explanation": "EPH marker (from 0 to 1) (default 0)"
        },
        "-prog": {
            "valueType": "int",
            "explanation": "Progression Order (from 0 to 4) (default lrcp)",
            "subValues": {
                "lrcp": {
                    "value": "0",
                    "explanation": null
                },
                "rlcp": {
                    "value": "1",
                    "explanation": null
                },
                "rpcl": {
                    "value": "2",
                    "explanation": null
                },
                "pcrl": {
                    "value": "3",
                    "explanation": null
                },
                "cprl": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-layer_rates": {
            "valueType": "string",
            "explanation": "Layer Rates"
        }
    },
    "libopenjpeg": {
        "-format": {
            "valueType": "int",
            "explanation": "Codec Format (from 0 to 2) (default jp2)",
            "subValues": {
                "j2k": {
                    "value": "0",
                    "explanation": null
                },
                "jp2": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from 0 to 4) (default jpeg2000)",
            "subValues": {
                "jpeg2000": {
                    "value": "0",
                    "explanation": null
                },
                "cinema2k": {
                    "value": "3",
                    "explanation": null
                },
                "cinema4k": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-cinema_mode": {
            "valueType": "int",
            "explanation": "Digital Cinema (from 0 to 3) (default off)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": null
                },
                "2k_24": {
                    "value": "1",
                    "explanation": null
                },
                "2k_48": {
                    "value": "2",
                    "explanation": null
                },
                "4k_24": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-prog_order": {
            "valueType": "int",
            "explanation": "Progression Order (from 0 to 4) (default lrcp)",
            "subValues": {
                "lrcp": {
                    "value": "0",
                    "explanation": null
                },
                "rlcp": {
                    "value": "1",
                    "explanation": null
                },
                "rpcl": {
                    "value": "2",
                    "explanation": null
                },
                "pcrl": {
                    "value": "3",
                    "explanation": null
                },
                "cprl": {
                    "value": "4",
                    "explanation": null
                }
            }
        },
        "-numresolution": {
            "valueType": "int",
            "explanation": "(from 0 to 33) (default 6)"
        },
        "-irreversible": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 0)"
        },
        "-disto_alloc": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 1)"
        },
        "-fixed_quality": {
            "valueType": "int",
            "explanation": "(from 0 to 1) (default 0)"
        }
    },
    "jpegls": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 2) (default left)",
            "subValues": {
                "left": {
                    "value": "0",
                    "explanation": null
                },
                "plane": {
                    "value": "1",
                    "explanation": null
                },
                "median": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "ljpeg": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "magicyuv": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "gradient": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "mjpeg": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 1 to 3) (default left)",
            "subValues": {
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "plane": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-huffman": {
            "valueType": "int",
            "explanation": "Huffman table strategy (from 0 to 1) (default optimal)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": null
                },
                "optimal": {
                    "value": "1",
                    "explanation": null
                }
            }
        }
    },
    "mpeg1video": {
        "-gop_timecode": {
            "valueType": "string",
            "explanation": "MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start."
        },
        "-drop_frame_timecode": {
            "valueType": "boolean",
            "explanation": "Timecode is in drop frame format. (default false)"
        },
        "-scan_offset": {
            "valueType": "boolean",
            "explanation": "Reserve space for SVCD scan offset user data. (default false)"
        },
        "-timecode_frame_start": {
            "valueType": "int64",
            "explanation": "GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "mpeg2video": {
        "-gop_timecode": {
            "valueType": "string",
            "explanation": "MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start."
        },
        "-drop_frame_timecode": {
            "valueType": "boolean",
            "explanation": "Timecode is in drop frame format. (default false)"
        },
        "-scan_offset": {
            "valueType": "boolean",
            "explanation": "Reserve space for SVCD scan offset user data. (default false)"
        },
        "-timecode_frame_start": {
            "valueType": "int64",
            "explanation": "GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)"
        },
        "-intra_vlc": {
            "valueType": "boolean",
            "explanation": "Use MPEG-2 intra VLC table. (default false)"
        },
        "-non_linear_quant": {
            "valueType": "boolean",
            "explanation": "Use nonlinear quantizer. (default false)"
        },
        "-alternate_scan": {
            "valueType": "boolean",
            "explanation": "Enable alternate scantable. (default false)"
        },
        "-seq_disp_ext": {
            "valueType": "int",
            "explanation": "Write sequence_display_extension blocks. (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "never": {
                    "value": "0",
                    "explanation": null
                },
                "always": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-video_format": {
            "valueType": "int",
            "explanation": "Video_format in the sequence_display_extension indicating the source of the video. (from 0 to 7) (default unspecified)",
            "subValues": {
                "component": {
                    "value": "0",
                    "explanation": null
                },
                "pal": {
                    "value": "1",
                    "explanation": null
                },
                "ntsc": {
                    "value": "2",
                    "explanation": null
                },
                "secam": {
                    "value": "3",
                    "explanation": null
                },
                "mac": {
                    "value": "4",
                    "explanation": null
                },
                "unspecified": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "mpeg4": {
        "-data_partitioning": {
            "valueType": "boolean",
            "explanation": "Use data partitioning. (default false)"
        },
        "-alternate_scan": {
            "valueType": "boolean",
            "explanation": "Enable alternate scantable. (default false)"
        },
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "libxvid": {
        "-lumi_aq": {
            "valueType": "int",
            "explanation": "Luminance masking AQ (from 0 to 1) (default 0)"
        },
        "-variance_aq": {
            "valueType": "int",
            "explanation": "Variance AQ (from 0 to 1) (default 0)"
        },
        "-ssim": {
            "valueType": "int",
            "explanation": "Show SSIM information to stdout (from 0 to 2) (default off)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": null
                },
                "avg": {
                    "value": "1",
                    "explanation": null
                },
                "frame": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-ssim_acc": {
            "valueType": "int",
            "explanation": "SSIM accuracy (from 0 to 4) (default 2)"
        },
        "-gmc": {
            "valueType": "int",
            "explanation": "use GMC (from 0 to 1) (default 0)"
        },
        "-me_quality": {
            "valueType": "int",
            "explanation": "Motion estimation quality (from 0 to 6) (default 4)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        }
    },
    "msmpeg4v2": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "msmpeg4": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "msvideo1": {},
    "pam": {},
    "pbm": {},
    "pcx": {},
    "pfm": {},
    "pgm": {},
    "pgmyuv": {},
    "png": {
        "-dpi": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per inch) (from 0 to 65536) (default 0)"
        },
        "-dpm": {
            "valueType": "int",
            "explanation": "Set image resolution (in dots per meter) (from 0 to 65536) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "sub": {
                    "value": "1",
                    "explanation": null
                },
                "up": {
                    "value": "2",
                    "explanation": null
                },
                "avg": {
                    "value": "3",
                    "explanation": null
                },
                "paeth": {
                    "value": "4",
                    "explanation": null
                },
                "mixed": {
                    "value": "5",
                    "explanation": null
                }
            }
        }
    },
    "ppm": {},
    "prores": {
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"fmpg\")"
        }
    },
    "prores_aw": {
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"fmpg\")"
        }
    },
    "prores_ks": {
        "-mbs_per_slice": {
            "valueType": "int",
            "explanation": "macroblocks per slice (from 1 to 8) (default 8)"
        },
        "-profile": {
            "valueType": "int",
            "explanation": "(from -1 to 5) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "proxy": {
                    "value": "0",
                    "explanation": null
                },
                "lt": {
                    "value": "1",
                    "explanation": null
                },
                "standard": {
                    "value": "2",
                    "explanation": null
                },
                "hq": {
                    "value": "3",
                    "explanation": null
                },
                "4444": {
                    "value": "4",
                    "explanation": null
                },
                "4444xq": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-vendor": {
            "valueType": "string",
            "explanation": "vendor ID (default \"Lavc\")"
        },
        "-bits_per_mb": {
            "valueType": "int",
            "explanation": "desired bits per macroblock (from 0 to 8192) (default 0)"
        },
        "-quant_mat": {
            "valueType": "int",
            "explanation": "quantiser matrix (from -1 to 6) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "proxy": {
                    "value": "0",
                    "explanation": null
                },
                "lt": {
                    "value": "2",
                    "explanation": null
                },
                "standard": {
                    "value": "3",
                    "explanation": null
                },
                "hq": {
                    "value": "4",
                    "explanation": null
                },
                "default": {
                    "value": "6",
                    "explanation": null
                }
            }
        },
        "-alpha_bits": {
            "valueType": "int",
            "explanation": "bits for alpha plane (from 0 to 16) (default 16)"
        }
    },
    "qtrle": {},
    "r10k": {},
    "r210": {},
    "rawvideo": {},
    "roqvideo": {
        "-quake3_compat": {
            "valueType": "boolean",
            "explanation": "Whether to respect known limitations in Quake 3 decoder (default true)"
        }
    },
    "rpza": {
        "-skip_frame_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        },
        "-start_one_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        },
        "-continue_one_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 0)"
        },
        "-sixteen_color_thresh": {
            "valueType": "int",
            "explanation": "(from 0 to 24) (default 1)"
        }
    },
    "rv10": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "rv20": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "sgi": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "snow": {
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 3) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                },
                "iter": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-memc_only": {
            "valueType": "boolean",
            "explanation": "Only do ME/MC (I frames -> ref, P frame -> ME+MC). (default false)"
        },
        "-no_bitstream": {
            "valueType": "boolean",
            "explanation": "Skip final bitstream writeout. (default false)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decission (from 0 to INT_MAX) (default 0)"
        },
        "-iterative_dia_size": {
            "valueType": "int",
            "explanation": "Dia size for the iterative ME (from 0 to INT_MAX) (default 0)"
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-pred": {
            "valueType": "int",
            "explanation": "Spatial decomposition type (from 0 to 1) (default dwt97)",
            "subValues": {
                "dwt97": {
                    "value": "0",
                    "explanation": null
                },
                "dwt53": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        }
    },
    "speedhq": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "sunrast": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "svq1": {
        "-motion-est": {
            "valueType": "int",
            "explanation": "Motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        }
    },
    "targa": {
        "-rle": {
            "valueType": "int",
            "explanation": "Use run-length compression (from 0 to 1) (default 1)"
        }
    },
    "libtheora": {},
    "tiff": {
        "-dpi": {
            "valueType": "int",
            "explanation": "set the image resolution (in dpi) (from 1 to 65536) (default 72)"
        },
        "-compression_algo": {
            "valueType": "int",
            "explanation": "(from 1 to 32946) (default packbits)",
            "subValues": {
                "packbits": {
                    "value": "32773",
                    "explanation": null
                },
                "raw": {
                    "value": "1",
                    "explanation": null
                },
                "lzw": {
                    "value": "5",
                    "explanation": null
                },
                "deflate": {
                    "value": "32946",
                    "explanation": null
                }
            }
        }
    },
    "utvideo": {
        "-pred": {
            "valueType": "int",
            "explanation": "Prediction method (from 0 to 3) (default left)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "left": {
                    "value": "1",
                    "explanation": null
                },
                "gradient": {
                    "value": "2",
                    "explanation": null
                },
                "median": {
                    "value": "3",
                    "explanation": null
                }
            }
        }
    },
    "v210": {},
    "v308": {},
    "v408": {},
    "v410": {},
    "libvpx": {
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-maxframes": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "backward": {
                    "value": "1",
                    "explanation": null
                },
                "forward": {
                    "value": "2",
                    "explanation": null
                },
                "centered": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "Tune the encoding to a specific scenario (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-deadline": {
            "valueType": "int",
            "explanation": "Time to spend encoding, in microseconds. (from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-error-resilient": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                },
                "partitions": {
                    "value": "partitions",
                    "explanation": "The frame partitions are independently decodable by the bool decoder, meaning that partitions can be decoded even though earlier partitions have been lost. Note that intra prediction is still done over the partition boundary."
                }
            }
        },
        "-max-intra-rate": {
            "valueType": "int",
            "explanation": "Maximum I-frame bitrate (pct) 0=unlimited (from -1 to INT_MAX) (default -1)"
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise-sensitivity": {
            "valueType": "int",
            "explanation": "Noise sensitivity (from 0 to 4) (default 0)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-ts-parameters": {
            "valueType": "dictionary",
            "explanation": "Temporal scaling configuration using a :-separated list of key=value parameters"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 2) (default -1)"
        },
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from -16 to 16) (default 1)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "(from -16 to 16) (default 1)"
        },
        "-quality": {
            "valueType": "int",
            "explanation": "(from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-vp8flags": {
            "valueType": "flags",
            "explanation": "(default 0)",
            "subValues": {
                "error_resilient": {
                    "value": "error_resilient",
                    "explanation": "enable error resilience"
                },
                "altref": {
                    "value": "altref",
                    "explanation": "enable use of alternate reference frames (VP8/2-pass only)"
                }
            }
        },
        "-arnr_max_frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from 0 to 15) (default 0)"
        },
        "-arnr_strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from 0 to 6) (default 3)"
        },
        "-arnr_type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from 1 to 3) (default 3)"
        },
        "-rc_lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from 0 to 25) (default 25)"
        },
        "-sharpness": {
            "valueType": "int",
            "explanation": "Increase sharpness at the expense of lower PSNR (from -1 to 7) (default -1)"
        }
    },
    "libvpx-vp9": {
        "-lag-in-frames": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-maxframes": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from -1 to INT_MAX) (default -1)"
        },
        "-arnr-type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "backward": {
                    "value": "1",
                    "explanation": null
                },
                "forward": {
                    "value": "2",
                    "explanation": null
                },
                "centered": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-tune": {
            "valueType": "int",
            "explanation": "Tune the encoding to a specific scenario (from -1 to INT_MAX) (default -1)",
            "subValues": {
                "psnr": {
                    "value": "0",
                    "explanation": null
                },
                "ssim": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-deadline": {
            "valueType": "int",
            "explanation": "Time to spend encoding, in microseconds. (from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-error-resilient": {
            "valueType": "flags",
            "explanation": "Error resilience configuration (default 0)",
            "subValues": {
                "default": {
                    "value": "default",
                    "explanation": "Improve resiliency against losses of whole frames"
                },
                "partitions": {
                    "value": "partitions",
                    "explanation": "The frame partitions are independently decodable by the bool decoder, meaning that partitions can be decoded even though earlier partitions have been lost. Note that intra prediction is still done over the partition boundary."
                }
            }
        },
        "-max-intra-rate": {
            "valueType": "int",
            "explanation": "Maximum I-frame bitrate (pct) 0=unlimited (from -1 to INT_MAX) (default -1)"
        },
        "-crf": {
            "valueType": "int",
            "explanation": "Select the quality for constant quality mode (from -1 to 63) (default -1)"
        },
        "-static-thresh": {
            "valueType": "int",
            "explanation": "A change threshold on blocks below which they will be skipped by the encoder (from 0 to INT_MAX) (default 0)"
        },
        "-drop-threshold": {
            "valueType": "int",
            "explanation": "Frame drop threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise-sensitivity": {
            "valueType": "int",
            "explanation": "Noise sensitivity (from 0 to 4) (default 0)"
        },
        "-undershoot-pct": {
            "valueType": "int",
            "explanation": "Datarate undershoot (min) target (%) (from -1 to 100) (default -1)"
        },
        "-overshoot-pct": {
            "valueType": "int",
            "explanation": "Datarate overshoot (max) target (%) (from -1 to 1000) (default -1)"
        },
        "-ts-parameters": {
            "valueType": "dictionary",
            "explanation": "Temporal scaling configuration using a :-separated list of key=value parameters"
        },
        "-auto-alt-ref": {
            "valueType": "int",
            "explanation": "Enable use of alternate reference frames (2-pass only) (from -1 to 6) (default -1)"
        },
        "-cpu-used": {
            "valueType": "int",
            "explanation": "Quality/Speed ratio modifier (from -8 to 8) (default 1)"
        },
        "-lossless": {
            "valueType": "int",
            "explanation": "Lossless mode (from -1 to 1) (default -1)"
        },
        "-tile-columns": {
            "valueType": "int",
            "explanation": "Number of tile columns to use, log2 (from -1 to 6) (default -1)"
        },
        "-tile-rows": {
            "valueType": "int",
            "explanation": "Number of tile rows to use, log2 (from -1 to 2) (default -1)"
        },
        "-frame-parallel": {
            "valueType": "boolean",
            "explanation": "Enable frame parallel decodability features (default auto)"
        },
        "-aq-mode": {
            "valueType": "int",
            "explanation": "adaptive quantization mode (from -1 to 4) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": "Aq not used"
                },
                "variance": {
                    "value": "1",
                    "explanation": "Variance based Aq"
                },
                "complexity": {
                    "value": "2",
                    "explanation": "Complexity based Aq"
                },
                "cyclic": {
                    "value": "3",
                    "explanation": "Cyclic Refresh Aq"
                },
                "equator360": {
                    "value": "4",
                    "explanation": "360 video Aq"
                }
            }
        },
        "-level": {
            "valueType": "float",
            "explanation": "Specify level (from -1 to 6.2) (default -1)"
        },
        "-row-mt": {
            "valueType": "boolean",
            "explanation": "Row based multi-threading (default auto)"
        },
        "-tune-content": {
            "valueType": "int",
            "explanation": "Tune content type (from -1 to 2) (default -1)",
            "subValues": {
                "default": {
                    "value": "0",
                    "explanation": "Regular video content"
                },
                "screen": {
                    "value": "1",
                    "explanation": "Screen capture content"
                },
                "film": {
                    "value": "2",
                    "explanation": "Film content; improves grain retention"
                }
            }
        },
        "-corpus-complexity": {
            "valueType": "int",
            "explanation": "corpus vbr complexity midpoint (from -1 to 10000) (default -1)"
        },
        "-enable-tpl": {
            "valueType": "boolean",
            "explanation": "Enable temporal dependency model (default auto)"
        },
        "-speed": {
            "valueType": "int",
            "explanation": "(from -16 to 16) (default 1)"
        },
        "-quality": {
            "valueType": "int",
            "explanation": "(from INT_MIN to INT_MAX) (default good)",
            "subValues": {
                "best": {
                    "value": "0",
                    "explanation": null
                },
                "good": {
                    "value": "1000000",
                    "explanation": null
                },
                "realtime": {
                    "value": "1",
                    "explanation": null
                }
            }
        },
        "-vp8flags": {
            "valueType": "flags",
            "explanation": "(default 0)",
            "subValues": {
                "error_resilient": {
                    "value": "error_resilient",
                    "explanation": "enable error resilience"
                },
                "altref": {
                    "value": "altref",
                    "explanation": "enable use of alternate reference frames (VP8/2-pass only)"
                }
            }
        },
        "-arnr_max_frames": {
            "valueType": "int",
            "explanation": "altref noise reduction max frame count (from 0 to 15) (default 0)"
        },
        "-arnr_strength": {
            "valueType": "int",
            "explanation": "altref noise reduction filter strength (from 0 to 6) (default 3)"
        },
        "-arnr_type": {
            "valueType": "int",
            "explanation": "altref noise reduction filter type (from 1 to 3) (default 3)"
        },
        "-rc_lookahead": {
            "valueType": "int",
            "explanation": "Number of frames to look ahead for alternate reference frame selection (from 0 to 25) (default 25)"
        },
        "-sharpness": {
            "valueType": "int",
            "explanation": "Increase sharpness at the expense of lower PSNR (from -1 to 7) (default -1)"
        }
    },
    "libwebp_anim": {
        "-lossless": {
            "valueType": "int",
            "explanation": "Use lossless mode (from 0 to 1) (default 0)"
        },
        "-preset": {
            "valueType": "int",
            "explanation": "Configuration preset (from -1 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "-1",
                    "explanation": "do not use a preset"
                },
                "default": {
                    "value": "0",
                    "explanation": "default preset"
                },
                "picture": {
                    "value": "1",
                    "explanation": "digital picture, like portrait, inner shot"
                },
                "photo": {
                    "value": "2",
                    "explanation": "outdoor photograph, with natural lighting"
                },
                "drawing": {
                    "value": "3",
                    "explanation": "hand or line drawing, with high-contrast details"
                },
                "icon": {
                    "value": "4",
                    "explanation": "small-sized colorful images"
                },
                "text": {
                    "value": "5",
                    "explanation": "text-like"
                }
            }
        },
        "-cr_threshold": {
            "valueType": "int",
            "explanation": "Conditional replenishment threshold (from 0 to INT_MAX) (default 0)"
        },
        "-cr_size": {
            "valueType": "int",
            "explanation": "Conditional replenishment block size (from 0 to 256) (default 16)"
        },
        "-quality": {
            "valueType": "float",
            "explanation": "Quality (from 0 to 100) (default 75)"
        }
    },
    "libwebp": {
        "-lossless": {
            "valueType": "int",
            "explanation": "Use lossless mode (from 0 to 1) (default 0)"
        },
        "-preset": {
            "valueType": "int",
            "explanation": "Configuration preset (from -1 to 5) (default none)",
            "subValues": {
                "none": {
                    "value": "-1",
                    "explanation": "do not use a preset"
                },
                "default": {
                    "value": "0",
                    "explanation": "default preset"
                },
                "picture": {
                    "value": "1",
                    "explanation": "digital picture, like portrait, inner shot"
                },
                "photo": {
                    "value": "2",
                    "explanation": "outdoor photograph, with natural lighting"
                },
                "drawing": {
                    "value": "3",
                    "explanation": "hand or line drawing, with high-contrast details"
                },
                "icon": {
                    "value": "4",
                    "explanation": "small-sized colorful images"
                },
                "text": {
                    "value": "5",
                    "explanation": "text-like"
                }
            }
        },
        "-cr_threshold": {
            "valueType": "int",
            "explanation": "Conditional replenishment threshold (from 0 to INT_MAX) (default 0)"
        },
        "-cr_size": {
            "valueType": "int",
            "explanation": "Conditional replenishment block size (from 0 to 256) (default 16)"
        },
        "-quality": {
            "valueType": "float",
            "explanation": "Quality (from 0 to 100) (default 75)"
        }
    },
    "wmv1": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "wmv2": {
        "-mpv_flags": {
            "valueType": "flags",
            "explanation": "Flags common for all mpegvideo-based encoders. (default 0)",
            "subValues": {
                "skip_rd": {
                    "value": "skip_rd",
                    "explanation": "RD optimal MB level residual skipping"
                },
                "strict_gop": {
                    "value": "strict_gop",
                    "explanation": "Strictly enforce gop size"
                },
                "qp_rd": {
                    "value": "qp_rd",
                    "explanation": "Use rate distortion optimization for qp selection"
                },
                "cbp_rd": {
                    "value": "cbp_rd",
                    "explanation": "use rate distortion optimization for CBP"
                },
                "naq": {
                    "value": "naq",
                    "explanation": "normalize adaptive quantization"
                },
                "mv0": {
                    "value": "mv0",
                    "explanation": "always try a mb with mv=<0,0>"
                }
            }
        },
        "-luma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-chroma_elim_threshold": {
            "valueType": "int",
            "explanation": "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)"
        },
        "-quantizer_noise_shaping": {
            "valueType": "int",
            "explanation": "(from 0 to INT_MAX) (default 0)"
        },
        "-error_rate": {
            "valueType": "int",
            "explanation": "Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)"
        },
        "-qsquish": {
            "valueType": "float",
            "explanation": "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)"
        },
        "-rc_qmod_amp": {
            "valueType": "float",
            "explanation": "experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_qmod_freq": {
            "valueType": "int",
            "explanation": "experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-rc_eq": {
            "valueType": "string",
            "explanation": "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex."
        },
        "-rc_init_cplx": {
            "valueType": "float",
            "explanation": "initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-rc_buf_aggressivity": {
            "valueType": "float",
            "explanation": "currently useless (from -FLT_MAX to FLT_MAX) (default 1)"
        },
        "-border_mask": {
            "valueType": "float",
            "explanation": "increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)"
        },
        "-lmin": {
            "valueType": "int",
            "explanation": "minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)"
        },
        "-lmax": {
            "valueType": "int",
            "explanation": "maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)"
        },
        "-ibias": {
            "valueType": "int",
            "explanation": "intra quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-pbias": {
            "valueType": "int",
            "explanation": "inter quant bias (from INT_MIN to INT_MAX) (default 999999)"
        },
        "-motion_est": {
            "valueType": "int",
            "explanation": "motion estimation algorithm (from 0 to 2) (default epzs)",
            "subValues": {
                "zero": {
                    "value": "0",
                    "explanation": null
                },
                "epzs": {
                    "value": "1",
                    "explanation": null
                },
                "xone": {
                    "value": "2",
                    "explanation": null
                }
            }
        },
        "-force_duplicated_matrix": {
            "valueType": "boolean",
            "explanation": "Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)"
        },
        "-b_strategy": {
            "valueType": "int",
            "explanation": "Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)"
        },
        "-b_sensitivity": {
            "valueType": "int",
            "explanation": "Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)"
        },
        "-brd_scale": {
            "valueType": "int",
            "explanation": "Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)"
        },
        "-skip_threshold": {
            "valueType": "int",
            "explanation": "Frame skip threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_factor": {
            "valueType": "int",
            "explanation": "Frame skip factor (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_exp": {
            "valueType": "int",
            "explanation": "Frame skip exponent (from INT_MIN to INT_MAX) (default 0)"
        },
        "-skip_cmp": {
            "valueType": "int",
            "explanation": "Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)",
            "subValues": {
                "sad": {
                    "value": "0",
                    "explanation": "Sum of absolute differences, fast"
                },
                "sse": {
                    "value": "1",
                    "explanation": "Sum of squared errors"
                },
                "satd": {
                    "value": "2",
                    "explanation": "Sum of absolute Hadamard transformed differences"
                },
                "dct": {
                    "value": "3",
                    "explanation": "Sum of absolute DCT transformed differences"
                },
                "psnr": {
                    "value": "4",
                    "explanation": "Sum of squared quantization errors, low quality"
                },
                "bit": {
                    "value": "5",
                    "explanation": "Number of bits needed for the block"
                },
                "rd": {
                    "value": "6",
                    "explanation": "Rate distortion optimal, slow"
                },
                "zero": {
                    "value": "7",
                    "explanation": "Zero"
                },
                "vsad": {
                    "value": "8",
                    "explanation": "Sum of absolute vertical differences"
                },
                "vsse": {
                    "value": "9",
                    "explanation": "Sum of squared vertical differences"
                },
                "nsse": {
                    "value": "10",
                    "explanation": "Noise preserving sum of squared differences"
                },
                "dct264": {
                    "value": "14",
                    "explanation": null
                },
                "dctmax": {
                    "value": "13",
                    "explanation": null
                },
                "chroma": {
                    "value": "256",
                    "explanation": null
                },
                "msad": {
                    "value": "15",
                    "explanation": "Sum of absolute differences, median predicted"
                }
            }
        },
        "-sc_threshold": {
            "valueType": "int",
            "explanation": "Scene change threshold (from INT_MIN to INT_MAX) (default 0)"
        },
        "-noise_reduction": {
            "valueType": "int",
            "explanation": "Noise reduction (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mpeg_quant": {
            "valueType": "int",
            "explanation": "Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)"
        },
        "-ps": {
            "valueType": "int",
            "explanation": "RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)"
        },
        "-mepc": {
            "valueType": "int",
            "explanation": "Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)"
        },
        "-mepre": {
            "valueType": "int",
            "explanation": "pre motion estimation (from INT_MIN to INT_MAX) (default 0)"
        },
        "-intra_penalty": {
            "valueType": "int",
            "explanation": "Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)"
        },
        "-a53cc": {
            "valueType": "boolean",
            "explanation": "Use A53 Closed Captions (if available) (default true)"
        },
        "-rc_strategy": {
            "valueType": "int",
            "explanation": "ratecontrol method (from 0 to 1) (default ffmpeg)",
            "subValues": {
                "ffmpeg": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                },
                "xvid": {
                    "value": "0",
                    "explanation": "deprecated, does nothing"
                }
            }
        }
    },
    "wrapped_avframe": {},
    "xbm": {},
    "xface": {},
    "xwd": {},
    "y41p": {},
    "yuv4": {},
    "zlib": {},
    "zmbv": {},
    "aac": {
        "-aac_coder": {
            "valueType": "int",
            "explanation": "Coding algorithm (from 0 to 2) (default fast)",
            "subValues": {
                "anmr": {
                    "value": "0",
                    "explanation": "ANMR method"
                },
                "twoloop": {
                    "value": "1",
                    "explanation": "Two loop searching method"
                },
                "fast": {
                    "value": "2",
                    "explanation": "Default fast search"
                }
            }
        },
        "-aac_ms": {
            "valueType": "boolean",
            "explanation": "Force M/S stereo coding (default auto)"
        },
        "-aac_is": {
            "valueType": "boolean",
            "explanation": "Intensity stereo coding (default true)"
        },
        "-aac_pns": {
            "valueType": "boolean",
            "explanation": "Perceptual noise substitution (default true)"
        },
        "-aac_tns": {
            "valueType": "boolean",
            "explanation": "Temporal noise shaping (default true)"
        },
        "-aac_ltp": {
            "valueType": "boolean",
            "explanation": "Long term prediction (default false)"
        },
        "-aac_pred": {
            "valueType": "boolean",
            "explanation": "AAC-Main prediction (default false)"
        },
        "-aac_pce": {
            "valueType": "boolean",
            "explanation": "Forces the use of PCEs (default false)"
        }
    },
    "aac_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "ac3": {
        "-center_mixlev": {
            "valueType": "float",
            "explanation": "Center Mix Level (from 0 to 1) (default 0.594604)"
        },
        "-surround_mixlev": {
            "valueType": "float",
            "explanation": "Surround Mix Level (from 0 to 1) (default 0.5)"
        },
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "ac3_fixed": {
        "-center_mixlev": {
            "valueType": "float",
            "explanation": "Center Mix Level (from 0 to 1) (default 0.594604)"
        },
        "-surround_mixlev": {
            "valueType": "float",
            "explanation": "Surround Mix Level (from 0 to 1) (default 0.5)"
        },
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "adpcm_adx": {},
    "adpcm_argo": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "g722": {},
    "g726": {
        "-code_size": {
            "valueType": "int",
            "explanation": "Bits per code (from 2 to 5) (default 4)"
        }
    },
    "g726le": {
        "-code_size": {
            "valueType": "int",
            "explanation": "Bits per code (from 2 to 5) (default 4)"
        }
    },
    "adpcm_ima_alp": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_amv": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_apm": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_qt": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_ssi": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ima_wav": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_ms": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_swf": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "adpcm_yamaha": {
        "-block_size": {
            "valueType": "int",
            "explanation": "set the block size (from 32 to 8192) (default 1024)"
        }
    },
    "alac": {
        "-min_prediction_order": {
            "valueType": "int",
            "explanation": "(from 1 to 30) (default 4)"
        },
        "-max_prediction_order": {
            "valueType": "int",
            "explanation": "(from 1 to 30) (default 6)"
        }
    },
    "alac_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "libopencore_amrnb": {
        "-dtx": {
            "valueType": "int",
            "explanation": "Allow DTX (generate comfort noise) (from 0 to 1) (default 0)"
        }
    },
    "aptx": {},
    "aptx_hd": {},
    "comfortnoise": {},
    "dca": {
        "-dca_adpcm": {
            "valueType": "boolean",
            "explanation": "Use ADPCM encoding (default false)"
        }
    },
    "eac3": {
        "-mixing_level": {
            "valueType": "int",
            "explanation": "Mixing Level (from -1 to 111) (default -1)"
        },
        "-room_type": {
            "valueType": "int",
            "explanation": "Room Type (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "large": {
                    "value": "1",
                    "explanation": "Large Room"
                },
                "small": {
                    "value": "2",
                    "explanation": "Small Room"
                }
            }
        },
        "-per_frame_metadata": {
            "valueType": "boolean",
            "explanation": "Allow Changing Metadata Per-Frame (default false)"
        },
        "-copyright": {
            "valueType": "int",
            "explanation": "Copyright Bit (from -1 to 1) (default -1)"
        },
        "-dialnorm": {
            "valueType": "int",
            "explanation": "Dialogue Level (dB) (from -31 to -1) (default -31)"
        },
        "-dsur_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround Encoded"
                }
            }
        },
        "-original": {
            "valueType": "int",
            "explanation": "Original Bit Stream (from -1 to 1) (default -1)"
        },
        "-dmix_mode": {
            "valueType": "int",
            "explanation": "Preferred Stereo Downmix Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "ltrt": {
                    "value": "1",
                    "explanation": "Lt/Rt Downmix Preferred"
                },
                "loro": {
                    "value": "2",
                    "explanation": "Lo/Ro Downmix Preferred"
                },
                "dplii": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic II Downmix Preferred"
                }
            }
        },
        "-ltrt_cmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Center Mix Level (from -1 to 2) (default -1)"
        },
        "-ltrt_surmixlev": {
            "valueType": "float",
            "explanation": "Lt/Rt Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_cmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Center Mix Level (from -1 to 2) (default -1)"
        },
        "-loro_surmixlev": {
            "valueType": "float",
            "explanation": "Lo/Ro Surround Mix Level (from -1 to 2) (default -1)"
        },
        "-dsurex_mode": {
            "valueType": "int",
            "explanation": "Dolby Surround EX Mode (from -1 to 3) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Surround EX Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Surround EX Encoded"
                },
                "dpliiz": {
                    "value": "3",
                    "explanation": "Dolby Pro Logic IIz-encoded"
                }
            }
        },
        "-dheadphone_mode": {
            "valueType": "int",
            "explanation": "Dolby Headphone Mode (from -1 to 2) (default -1)",
            "subValues": {
                "notindicated": {
                    "value": "0",
                    "explanation": "Not Indicated (default)"
                },
                "on": {
                    "value": "2",
                    "explanation": "Dolby Headphone Encoded"
                },
                "off": {
                    "value": "1",
                    "explanation": "Not Dolby Headphone Encoded"
                }
            }
        },
        "-ad_conv_type": {
            "valueType": "int",
            "explanation": "A/D Converter Type (from -1 to 1) (default -1)",
            "subValues": {
                "standard": {
                    "value": "0",
                    "explanation": "Standard (default)"
                },
                "hdcd": {
                    "value": "1",
                    "explanation": "HDCD"
                }
            }
        },
        "-stereo_rematrixing": {
            "valueType": "boolean",
            "explanation": "Stereo Rematrixing (default true)"
        },
        "-channel_coupling": {
            "valueType": "int",
            "explanation": "Channel Coupling (from -1 to 1) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        },
        "-cpl_start_band": {
            "valueType": "int",
            "explanation": "Coupling Start Band (from -1 to 15) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "Selected by the Encoder"
                }
            }
        }
    },
    "flac": {
        "-lpc_coeff_precision": {
            "valueType": "int",
            "explanation": "LPC coefficient precision (from 0 to 15) (default 15)"
        },
        "-lpc_type": {
            "valueType": "int",
            "explanation": "LPC algorithm (from -1 to 3) (default -1)",
            "subValues": {
                "none": {
                    "value": "0",
                    "explanation": null
                },
                "fixed": {
                    "value": "1",
                    "explanation": null
                },
                "levinson": {
                    "value": "2",
                    "explanation": null
                },
                "cholesky": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-lpc_passes": {
            "valueType": "int",
            "explanation": "Number of passes to use for Cholesky factorization during LPC analysis (from 1 to INT_MAX) (default 2)"
        },
        "-min_partition_order": {
            "valueType": "int",
            "explanation": "(from -1 to 8) (default -1)"
        },
        "-max_partition_order": {
            "valueType": "int",
            "explanation": "(from -1 to 8) (default -1)"
        },
        "-prediction_order_method": {
            "valueType": "int",
            "explanation": "Search method for selecting prediction order (from -1 to 5) (default -1)",
            "subValues": {
                "estimation": {
                    "value": "0",
                    "explanation": null
                },
                "2level": {
                    "value": "1",
                    "explanation": null
                },
                "4level": {
                    "value": "2",
                    "explanation": null
                },
                "8level": {
                    "value": "3",
                    "explanation": null
                },
                "search": {
                    "value": "4",
                    "explanation": null
                },
                "log": {
                    "value": "5",
                    "explanation": null
                }
            }
        },
        "-ch_mode": {
            "valueType": "int",
            "explanation": "Stereo decorrelation mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": null
                },
                "indep": {
                    "value": "0",
                    "explanation": null
                },
                "left_side": {
                    "value": "1",
                    "explanation": null
                },
                "right_side": {
                    "value": "2",
                    "explanation": null
                },
                "mid_side": {
                    "value": "3",
                    "explanation": null
                }
            }
        },
        "-exact_rice_parameters": {
            "valueType": "boolean",
            "explanation": "Calculate rice parameters exactly (default false)"
        },
        "-multi_dim_quant": {
            "valueType": "boolean",
            "explanation": "Multi-dimensional quantization (default false)"
        },
        "-min_prediction_order": {
            "valueType": "int",
            "explanation": "(from -1 to 32) (default -1)"
        },
        "-max_prediction_order": {
            "valueType": "int",
            "explanation": "(from -1 to 32) (default -1)"
        }
    },
    "g723_1": {},
    "ilbc_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "mlp": {},
    "mp2": {},
    "mp2fixed": {},
    "libmp3lame": {
        "-reservoir": {
            "valueType": "boolean",
            "explanation": "use bit reservoir (default true)"
        },
        "-joint_stereo": {
            "valueType": "boolean",
            "explanation": "use joint stereo (default true)"
        },
        "-abr": {
            "valueType": "boolean",
            "explanation": "use ABR (default false)"
        }
    },
    "nellymoser": {},
    "opus": {
        "-opus_delay": {
            "valueType": "float",
            "explanation": "Maximum delay in milliseconds (from 2.5 to 360) (default 360)"
        },
        "-apply_phase_inv": {
            "valueType": "boolean",
            "explanation": "Apply intensity stereo phase inversion (default true)"
        }
    },
    "libopus": {
        "-application": {
            "valueType": "int",
            "explanation": "Intended application type (from 2048 to 2051) (default audio)",
            "subValues": {
                "voip": {
                    "value": "2048",
                    "explanation": "Favor improved speech intelligibility"
                },
                "audio": {
                    "value": "2049",
                    "explanation": "Favor faithfulness to the input"
                },
                "lowdelay": {
                    "value": "2051",
                    "explanation": "Restrict to only the lowest delay modes"
                }
            }
        },
        "-frame_duration": {
            "valueType": "float",
            "explanation": "Duration of a frame in milliseconds (from 2.5 to 120) (default 20)"
        },
        "-packet_loss": {
            "valueType": "int",
            "explanation": "Expected packet loss percentage (from 0 to 100) (default 0)"
        },
        "-fec": {
            "valueType": "boolean",
            "explanation": "Enable inband FEC. Expected packet loss must be non-zero (default false)"
        },
        "-vbr": {
            "valueType": "int",
            "explanation": "Variable bit rate mode (from 0 to 2) (default on)",
            "subValues": {
                "off": {
                    "value": "0",
                    "explanation": "Use constant bit rate"
                },
                "on": {
                    "value": "1",
                    "explanation": "Use variable bit rate"
                },
                "constrained": {
                    "value": "2",
                    "explanation": "Use constrained VBR"
                }
            }
        },
        "-mapping_family": {
            "valueType": "int",
            "explanation": "Channel Mapping Family (from -1 to 255) (default -1)"
        },
        "-apply_phase_inv": {
            "valueType": "boolean",
            "explanation": "Apply intensity stereo phase inversion (default true)"
        }
    },
    "pcm_alaw": {},
    "pcm_alaw_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "pcm_dvd": {},
    "pcm_f32be": {},
    "pcm_f32le": {},
    "pcm_f64be": {},
    "pcm_f64le": {},
    "pcm_mulaw": {},
    "pcm_mulaw_at": {
        "-aac_at_mode": {
            "valueType": "int",
            "explanation": "ratecontrol mode (from -1 to 3) (default auto)",
            "subValues": {
                "auto": {
                    "value": "-1",
                    "explanation": "VBR if global quality is given; CBR otherwise"
                },
                "cbr": {
                    "value": "0",
                    "explanation": "constant bitrate"
                },
                "abr": {
                    "value": "1",
                    "explanation": "long-term average bitrate"
                },
                "cvbr": {
                    "value": "2",
                    "explanation": "constrained variable bitrate"
                },
                "vbr": {
                    "value": "3",
                    "explanation": "variable bitrate"
                }
            }
        },
        "-aac_at_quality": {
            "valueType": "int",
            "explanation": "quality vs speed control (from 0 to 2) (default 0)"
        }
    },
    "pcm_s16be": {},
    "pcm_s16be_planar": {},
    "pcm_s16le": {},
    "pcm_s16le_planar": {},
    "pcm_s24be": {},
    "pcm_s24daud": {},
    "pcm_s24le": {},
    "pcm_s24le_planar": {},
    "pcm_s32be": {},
    "pcm_s32le": {},
    "pcm_s32le_planar": {},
    "pcm_s64be": {},
    "pcm_s64le": {},
    "pcm_s8": {},
    "pcm_s8_planar": {},
    "pcm_u16be": {},
    "pcm_u16le": {},
    "pcm_u24be": {},
    "pcm_u24le": {},
    "pcm_u32be": {},
    "pcm_u32le": {},
    "pcm_u8": {},
    "pcm_vidc": {},
    "real_144": {},
    "roq_dpcm": {},
    "s302m": {},
    "sbc": {
        "-sbc_delay": {
            "valueType": "duration",
            "explanation": "set maximum algorithmic latency (default 0.013)"
        },
        "-msbc": {
            "valueType": "boolean",
            "explanation": "use mSBC mode (wideband speech mono SBC) (default false)"
        }
    },
    "sonic": {},
    "sonicls": {},
    "libspeex": {
        "-abr": {
            "valueType": "int",
            "explanation": "Use average bit rate (from 0 to 1) (default 0)"
        },
        "-cbr_quality": {
            "valueType": "int",
            "explanation": "Set quality value (0 to 10) for CBR (from 0 to 10) (default 8)"
        },
        "-frames_per_packet": {
            "valueType": "int",
            "explanation": "Number of frames to encode in each packet (from 1 to 8) (default 1)"
        },
        "-vad": {
            "valueType": "int",
            "explanation": "Voice Activity Detection (from 0 to 1) (default 0)"
        },
        "-dtx": {
            "valueType": "int",
            "explanation": "Discontinuous Transmission (from 0 to 1) (default 0)"
        }
    },
    "truehd": {},
    "tta": {},
    "vorbis": {},
    "libvorbis": {
        "-iblock": {
            "valueType": "double",
            "explanation": "Sets the impulse block bias (from -15 to 0) (default 0)"
        }
    },
    "wavpack": {
        "-joint_stereo": {
            "valueType": "boolean",
            "explanation": "(default auto)"
        },
        "-optimize_mono": {
            "valueType": "boolean",
            "explanation": "(default false)"
        }
    },
    "wmav1": {},
    "wmav2": {},
    "ssa": {},
    "ass": {},
    "dvbsub": {},
    "dvdsub": {
        "-palette": {
            "valueType": "string",
            "explanation": "set the global palette"
        },
        "-even_rows_fix": {
            "valueType": "boolean",
            "explanation": "Make number of rows even (workaround for some players) (default false)"
        }
    },
    "mov_text": {
        "-height": {
            "valueType": "int",
            "explanation": "Frame height, usually video height (from 0 to INT_MAX) (default 0)"
        }
    },
    "srt": {},
    "subrip": {},
    "text": {},
    "ttml": {},
    "webvtt": {},
    "xsub": {}
}